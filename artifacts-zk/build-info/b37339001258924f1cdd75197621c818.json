{
  "id": "b37339001258924f1cdd75197621c818",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.7.4",
  "solcLongVersion": "0.7.4+commit.3f05b770",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/mocks/CallReceiverMock.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\ncontract CallReceiverMock {\n    string public sharedAnswer;\n\n    event MockFunctionCalled();\n\n    uint256[] private _array;\n\n    function mockFunction() public payable returns (string memory) {\n        emit MockFunctionCalled();\n\n        return \"0x1234\";\n    }\n\n    function mockFunctionNonPayable() public returns (string memory) {\n        emit MockFunctionCalled();\n\n        return \"0x1234\";\n    }\n\n    function mockStaticFunction() public pure returns (string memory) {\n        return \"0x1234\";\n    }\n\n    function mockFunctionRevertsNoReason() public payable {\n        revert();\n    }\n\n    function mockFunctionRevertsReason() public payable {\n        revert(\"CallReceiverMock: reverting\");\n    }\n\n    function mockFunctionThrows() public payable {\n        assert(false);\n    }\n\n    function mockFunctionOutOfGas() public payable {\n        for (uint256 i = 0; ; ++i) {\n            _array.push(i);\n        }\n    }\n\n    function mockFunctionWritesStorage() public returns (string memory) {\n        sharedAnswer = \"42\";\n        return \"0x1234\";\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "mode": "3"
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.methodIdentifiers"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/mocks/CallReceiverMock.sol": {
        "CallReceiverMock": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [],
              "name": "MockFunctionCalled",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "mockFunction",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "mockFunctionNonPayable",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "mockFunctionOutOfGas",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "mockFunctionRevertsNoReason",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "mockFunctionRevertsReason",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "mockFunctionThrows",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "mockFunctionWritesStorage",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "mockStaticFunction",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "sharedAnswer",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "metadata": {
            "optimizer_settings": "M3B3",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"MockFunctionCalled\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"mockFunction\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mockFunctionNonPayable\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mockFunctionOutOfGas\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mockFunctionRevertsNoReason\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mockFunctionRevertsReason\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mockFunctionThrows\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mockFunctionWritesStorage\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mockStaticFunction\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sharedAnswer\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/CallReceiverMock.sol\":\"CallReceiverMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/mocks/CallReceiverMock.sol\":{\"keccak256\":\"0x7bb6e2b999a6075ee1a67dc2f13e6826d7d2e6664421e297c2ab948fc08d8ed6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73256ca2884505a6fa1ebcb8abcfe7cc3d71aafb717dd92fcd181fd41e1890e\",\"dweb:/ipfs/QmYf2yVsSnaYtuUc1ufC996zT6Sg6KW3FNzhgSsoZggoAb\"]}},\"version\":1}",
            "zk_version": "1.3.10"
          },
          "evm": {
            "legacyAssembly": null,
            "assembly": "\t.text\n\t.file\t\"CallReceiverMock.sol:CallReceiverMock\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[3]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@calldatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tadd\tstack[@calldatasize], r0, r2\n\tsub.s!\t4, r2, r2\n\tjump.lt\t@.BB0_3\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tld\tr2, r3\n\tshr.s\t224, r3, r2\n\tsub.s!\t@CPI0_2[0], r3, r3\n\tjump.lt\t@.BB0_11\n\tsub.s!\t@CPI0_3[0], r2, r3\n\tjump.eq\t@.BB0_12\n\tsub.s!\t@CPI0_4[0], r2, r1\n\tjump.ne\t@.BB0_35\n\tadd\t1, r0, r1\n\tadd\tr0, r0, r2\n.BB0_25:\n\tsload\tr1, r3\n\tadd\t1, r3, r4\n\tsstore\tr1, r4\n\tst.1\t0, r1\n\tadd\t@CPI0_10[0], r3, r3\n\tsstore\tr3, r2\n\tadd\t1, r2, r2\n\tjump\t@.BB0_25\n.BB0_1:\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_3\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_1[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_11:\n\tsub.s!\t@CPI0_11[0], r2, r1\n\tjump.ne\t@.BB0_38\n\tadd\t@CPI0_16[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t27, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_17[0], r0, r1\n\tst.1\t196, r1\n\tld.1\t64, r1\n\tsub\t228, r1, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_35:\n\tsub.s!\t@CPI0_5[0], r2, r1\n\tjump.ne\t@.BB0_36\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_3\n\tld.1\t64, r1\n\tadd\t64, r1, r2\n\tst.1\t64, r2\n\tadd\t2, r0, r2\n\tst.1.inc\tr1, r2, r2\n\tadd\t@CPI0_9[0], r0, r1\n\tadd\tr2, r0, stack-[2]\n\tst.1\tr2, r1\n\tsload\tr0, r1\n\tadd\tr1, r0, stack-[3]\n\tst.1\t0, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_3\n\tadd\tstack-[2], r0, r2\n\tld.1\tr2, r2\n\tsub.s\t256, r0, r3\n\tand\tr2, r3, r2\n\tor\t4, r2, r2\n\tld\tr1, r1\n\tsstore\tr0, r2\n\tsub.s\t1, r0, r2\n\tadd\tstack-[3], r0, r3\n\txor\tr3, r2, r2\n\tshl.s\t8, r2, r2\n\tand\t256, r2, r2\n\tsub.s\t1, r2, r2\n\tand\tr2, r3, r2\n\tshr.s\t1, r2, r2\n\tadd\t31, r2, r2\n\tshr.s\t5, r2, r2\n\tadd\tr1, r2, r2\n\tsub!\tr2, r1, r3\n\tjump.le\t@.BB0_22\n.BB0_49:\n\tsstore\tr1, r0\n\tadd\t1, r1, r1\n\tsub!\tr2, r1, r3\n\tjump.gt\t@.BB0_49\n\tjump\t@.BB0_22\n.BB0_38:\n\tsub.s!\t@CPI0_12[0], r2, r1\n\tjump.ne\t@.BB0_3\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_3\n\tld.1\t64, r1\n.BB0_12:\n\tadd\t@CPI0_0[0], r0, r2\n\tcontext.gas_left\tr3\n\tsub.s!\t@CPI0_0[0], r3, r4\n\tadd.ge\tr2, r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t192, r3, r2\n\tor\tr2, r1, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t1, r0, r3\n\tadd\t@CPI0_14[0], r0, r4\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_3\n.BB0_22:\n\tld.1\t64, r2\n\tadd\t64, r2, r1\n\tst.1\t64, r1\n\tadd\t32, r2, r1\n\tadd\t@CPI0_15[0], r0, r3\n\tst.1\tr1, r3\n\tadd\t6, r0, r1\n\tst.1\tr2, r1\n\tadd\t32, r0, r1\n\tld.1\t64, r3\n\tst.1.inc\tr3, r1, r4\n\tld.1\tr2, r5\n\tst.1\tr4, r5\n\tadd\t64, r3, r4\n\tld.1\tr2, r5\n\tsub.s!\t0, r5, r3\n\tadd\tr0, r0, r3\n\tjump.eq\t@.BB0_15\n\tadd\tr0, r0, r3\n.BB0_39:\n\tadd\tr3, r4, r6\n\tadd\t32, r3, r3\n\tadd\tr3, r2, r7\n\tld.1\tr7, r7\n\tst.1\tr6, r7\n\tsub!\tr3, r5, r6\n\tjump.lt\t@.BB0_39\n\tadd\tr5, r4, r3\n\tand!\t31, r5, r5\n\tjump.eq\t@.BB0_16\n\tadd\t256, r0, r4\n\tadd\t1, r0, r2\n\tsub\tr3, r5, r3\n\tsub\t32, r5, r6\n\tld.1\tr3, r5\n.BB0_42:\n\tand!\t1, r6, r7\n\tadd\tr4, r0, r7\n\tadd.eq\t1, r0, r7\n\tmul\tr7, r2, r2, r7\n\tshr.s\t1, r6, r7\n\tmul\tr4, r4, r4, r8\n\tsub.s!\t1, r6, r6\n\tadd\tr7, r0, r6\n\tjump.gt\t@.BB0_42\n\tsub\t0, r2, r2\n\tand\tr5, r2, r2\n\tst.1\tr3, r2\n\tadd\tr1, r0, r4\n.BB0_15:\n\tadd\tr3, r4, r3\n.BB0_16:\n\tld.1\t64, r1\n\tsub\tr3, r1, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_36:\n\tsub.s!\t@CPI0_6[0], r2, r1\n\tjump.ne\t@.BB0_37\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.eq\t@.BB0_22\n\tjump\t@.BB0_3\n.BB0_37:\n\tsub.s!\t@CPI0_7[0], r2, r1\n\tjump.ne\t@.BB0_3\n\tcontext.get_context_u128\tr1\n\tsub.s!\t0, r1, r1\n\tjump.ne\t@.BB0_3\n\tsub.s\t1, r0, r1\n\tsload\tr0, r2\n\txor\tr2, r1, r1\n\tshl.s\t8, r1, r1\n\tand\t256, r1, r1\n\tsub.s\t1, r1, r1\n\tand\tr1, r2, r1\n\tshr.s\t1, r1, r5\n\tsub.s\t32, r0, r2\n\tadd\t31, r5, r3\n\tand\tr3, r2, r2\n\tld.1\t64, r4\n\tadd\t32, r4, r3\n\tadd\tr3, r0, stack-[2]\n\tadd\tr2, r3, r2\n\tst.1\t64, r2\n\tadd\tr4, r0, stack-[3]\n\tadd\tr5, r0, stack-[1]\n\tst.1\tr4, r5\n\tsub.s!\t2, r1, r2\n\tjump.lt\t@.BB0_26\n\tsub.s!\t63, r1, r1\n\tjump.le\t@.BB0_48\n\tst.1\t0, r0\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.lt\tr2, r0, r1\n\tshl.s\t192, r1, r1\n\tor\t@CPI0_8[0], r1, r1\n\tadd\t32784, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r2\n\tjump.eq\t@.BB0_3\n\tadd\tstack-[2], r0, r3\n\tadd\tstack-[1], r0, r2\n\tadd\tr2, r3, r2\n\tld\tr1, r1\n.BB0_30:\n\tsload\tr1, r4\n\tst.1.inc\tr3, r4, r3\n\tadd\t1, r1, r1\n\tsub!\tr2, r3, r4\n\tjump.gt\t@.BB0_30\n\tjump\t@.BB0_26\n.BB0_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_48:\n\tsub.s\t256, r0, r1\n\tsload\tr0, r2\n\tand\tr2, r1, r1\n\tadd\tstack-[2], r0, r2\n\tst.1\tr2, r1\n.BB0_26:\n\tld.1\t64, r2\n\tadd\t32, r0, r1\n\tst.1.inc\tr2, r1, r3\n\tadd\tstack-[3], r0, r5\n\tld.1\tr5, r4\n\tst.1\tr3, r4\n\tadd\t64, r2, r3\n\tld.1\tr5, r4\n\tsub.s!\t0, r4, r2\n\tadd\tr0, r0, r2\n\tjump.eq\t@.BB0_17\n\tadd\tr0, r0, r2\n\tadd\tstack-[2], r0, r7\n.BB0_40:\n\tadd\tr2, r3, r5\n\tadd\tr2, r7, r6\n\tld.1\tr6, r6\n\tst.1\tr5, r6\n\tadd\t32, r2, r2\n\tsub!\tr2, r4, r5\n\tjump.lt\t@.BB0_40\n\tadd\tr4, r3, r2\n\tand!\t31, r4, r5\n\tjump.eq\t@.BB0_18\n\tadd\t256, r0, r4\n\tadd\t1, r0, r3\n\tsub\tr2, r5, r2\n\tsub\t32, r5, r6\n\tld.1\tr2, r5\n.BB0_45:\n\tand!\t1, r6, r7\n\tadd\tr4, r0, r7\n\tadd.eq\t1, r0, r7\n\tmul\tr7, r3, r3, r7\n\tshr.s\t1, r6, r7\n\tmul\tr4, r4, r4, r8\n\tsub.s!\t1, r6, r6\n\tadd\tr7, r0, r6\n\tjump.gt\t@.BB0_45\n\tsub\t0, r3, r3\n\tand\tr5, r3, r3\n\tst.1\tr2, r3\n\tadd\tr1, r0, r3\n.BB0_17:\n\tadd\tr2, r3, r2\n.BB0_18:\n\tld.1\t64, r1\n\tsub\tr2, r1, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\n__farcall:\n.func_begin1:\n.tmp0:\n\tfar_call\tr1, r2, @.BB1_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB1_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end1:\n\n__staticcall:\n.func_begin2:\n.tmp3:\n\tfar_call.static\tr1, r2, @.BB2_2\n.tmp4:\n\tadd\t1, r0, r2\n\tret\n.BB2_2:\n.tmp5:\n\tadd\tr0, r0, r2\n\tret\n.func_end2:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_2:\n\t.cell 28241145556330545981386237735425624364555976280029027709046940195391199510528\nCPI0_3:\n\t.cell 1047522308\nCPI0_4:\n\t.cell 2811472711\nCPI0_5:\n\t.cell 2852452222\nCPI0_6:\n\t.cell 3371988630\nCPI0_7:\n\t.cell 4232105843\nCPI0_8:\n\t.cell 904625697166532776746648320380374280103671757735618107014721178055227736064\nCPI0_9:\n\t.cell 23608610479568771411892021204926877208486839830052020518420902061671985446912\nCPI0_10:\n\t.cell -35707666377435648211887908874984608119992236509074197713628505308453184860938\nCPI0_11:\n\t.cell 201541992\nCPI0_12:\n\t.cell 258204716\nCPI0_13:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_14:\n\t.cell 37440254289098843315150713809446554253546233610242652594857904666258132601891\nCPI0_15:\n\t.cell 21923377918730837290968721625747972880856561583457962940023957976699696578560\nCPI0_16:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_17:\n\t.cell 30477093329319361364474078662779260868555127588721047161408021377122736013312\n",
            "bytecode": {
              "object": "0002000000000002000300000000000200010000000103550000006001100270000000510010019d0000008001000039000000400010043f00000001022001900000001f0000c13d0000000002000031000000040220008c000000f70000413d0000000102000367000000000302043b000000e002300270000000530330009c000000270000413d000000540320009c000000750000613d000000550120009c0000003c0000c13d00000001010000390000000002000019000000000301041a0000000104300039000000000041041b00000000001004350000005b03300041000000000023041b0000000102200039000000170000013d0000000001000416000000000110004c000000f70000c13d00000020010000390000010000100443000001200000044300000052010000410000013e0001042e0000005c0120009c0000006f0000c13d0000006101000041000000800010043f0000002001000039000000840010043f0000001b01000039000000a40010043f0000006201000041000000c40010043f000000400100043d000000e4021000890000005103000041000000510420009c0000000002038019000000510410009c000000000103801900000040011002100000006002200210000000000112019f0000013f00010430000000560120009c000000c00000c13d0000000001000416000000000110004c000000f70000c13d000000400100043d0000004002100039000000400020043f000000020200003900000000022104360000005a01000041000200000002001d0000000000120435000000000100041a000300000001001d000000000000043500000051010000410000000002000414000000510320009c0000000001024019000000c00110021000000059011001c70000801002000039013d01380000040f0000000102200190000000f70000613d00000002020000290000000002020433000001000300008a000000000232016f00000004022001bf000000000101043b000000000020041b000000010200008a0000000303000029000000000223013f0000000802200210000001000220018f000000010220008a000000000232016f00000001022002700000001f0220003900000005022002700000000002210019000000000312004b000000850000a13d000000000001041b0000000101100039000000000312004b0000006a0000213d000000850000013d0000005d0120009c000000f70000c13d0000000001000416000000000110004c000000f70000c13d000000400100043d00000051020000410000000003000414000000510430009c0000000003028019000000510410009c00000000010280190000004001100210000000c002300210000000000112019f0000005e011001c70000800d0200003900000001030000390000005f04000041013d01330000040f0000000101200190000000f70000613d000000400200043d0000004001200039000000400010043f000000200120003900000060030000410000000000310435000000060100003900000000001204350000002001000039000000400300043d00000000041304360000000005020433000000000054043500000040043000390000000005020433000000000350004c0000000003000019000000b40000613d000000000300001900000000064300190000002003300039000000000723001900000000070704330000000000760435000000000653004b000000980000413d00000000034500190000001f05500190000000b50000613d0000010004000039000000010200003900000000035300490000002006500089000000000503043300000001076001900000000007040019000000010700603900000000722700a9000000010760027000000000844400a9000000010660008c0000000006070019000000a70000213d0000000002200049000000000225016f000000000023043500000000040100190000000003430019000000400100043d00000000021300490000005103000041000000510420009c0000000002038019000000510410009c000000000103801900000040011002100000006002200210000000000112019f0000013e0001042e000000570120009c000000c60000c13d0000000001000416000000000110004c000000850000613d000000f70000013d000000580120009c000000f70000c13d0000000001000416000000000110004c000000f70000c13d000000010100008a000000000200041a000000000112013f0000000801100210000001000110018f000000010110008a000000000121016f0000000105100270000000200200008a0000001f03500039000000000223016f000000400400043d0000002003400039000200000003001d0000000002320019000000400020043f000300000004001d000100000005001d0000000000540435000000020210008c000000fe0000413d0000003f0110008c000000f90000a13d000000000000043500000051010000410000000002000414000000510320009c0000000001024019000000c00110021000000059011001c70000801002000039013d01380000040f0000000102200190000000f70000613d000000020300002900000001020000290000000002320019000000000101043b000000000401041a00000000034304360000000101100039000000000432004b000000f10000213d000000fe0000013d00000000010000190000013f00010430000001000100008a000000000200041a000000000112016f00000002020000290000000000120435000000400200043d0000002001000039000000000312043600000003050000290000000004050433000000000043043500000040032000390000000004050433000000000240004c0000000002000019000001270000613d0000000002000019000000020700002900000000053200190000000006720019000000000606043300000000006504350000002002200039000000000542004b0000010b0000413d00000000023400190000001f05400190000001280000613d0000010004000039000000010300003900000000025200490000002006500089000000000502043300000001076001900000000007040019000000010700603900000000733700a9000000010760027000000000844400a9000000010660008c00000000060700190000011a0000213d0000000003300049000000000335016f000000000032043500000000030100190000000002320019000000400100043d00000000021200490000005103000041000000510420009c0000000002038019000000510410009c000000000103801900000040011002100000006002200210000000000112019f0000013e0001042e00000136002104210000000102000039000000000001042d0000000002000019000000000001042d0000013b002104230000000102000039000000000001042d0000000002000019000000000001042d0000013d000004320000013e0001042e0000013f00010430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff00000002000000000000000000000000000000400000010000000000000000003e6fec0400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003e6fec0400000000000000000000000000000000000000000000000000000000a793ab4700000000000000000000000000000000000000000000000000000000aa04f77e00000000000000000000000000000000000000000000000000000000c8fc769600000000000000000000000000000000000000000000000000000000fc40cf7302000000000000000000000000000000000000200000000000000000000000003432000000000000000000000000000000000000000000000000000000000000b10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6000000000000000000000000000000000000000000000000000000000c034968000000000000000000000000000000000000000000000000000000000f63e42c020000000000000000000000000000000000000000000000000000000000000052c66ed6ec9ca819cba26fe2b2650059270d8981b295af300187a964f54a8c23307831323334000000000000000000000000000000000000000000000000000008c379a00000000000000000000000000000000000000000000000000000000043616c6c52656365697665724d6f636b3a20726576657274696e6700000000000000000000000000000000000000000000000000000000000000000000000000861a588bb8c5a6166a9fe87361e727c930ff39388427b7d429bd7eb5a3be73e5"
            },
            "methodIdentifiers": {
              "mockFunction()": "3e6fec04",
              "mockFunctionNonPayable()": "0f63e42c",
              "mockFunctionOutOfGas()": "a793ab47",
              "mockFunctionRevertsNoReason()": "2c81d638",
              "mockFunctionRevertsReason()": "0c034968",
              "mockFunctionThrows()": "3bcfaa14",
              "mockFunctionWritesStorage()": "aa04f77e",
              "mockStaticFunction()": "c8fc7696",
              "sharedAnswer()": "fc40cf73"
            }
          },
          "hash": "01000065a91dd69ca3e388dc8695aca01316c8d920e34907d826150fc93dcf26",
          "factoryDependencies": {}
        }
      }
    },
    "sources": {
      "contracts/mocks/CallReceiverMock.sol": {
        "id": 0,
        "ast": {
          "absolutePath": "contracts/mocks/CallReceiverMock.sol",
          "exportedSymbols": {
            "CallReceiverMock": [
              93
            ]
          },
          "id": 94,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 93,
              "linearizedBaseContracts": [
                93
              ],
              "name": "CallReceiverMock",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "fc40cf73",
                  "id": 3,
                  "mutability": "mutable",
                  "name": "sharedAnswer",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "90:26:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "90:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "id": 5,
                  "name": "MockFunctionCalled",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 4,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "147:2:0"
                  },
                  "src": "123:27:0"
                },
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "_array",
                  "nodeType": "VariableDeclaration",
                  "scope": 93,
                  "src": "156:24:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "156:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7,
                    "nodeType": "ArrayTypeName",
                    "src": "156:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 18,
                    "nodeType": "Block",
                    "src": "250:68:0",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 13,
                            "name": "MockFunctionCalled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5,
                            "src": "265:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 14,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "265:20:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 15,
                        "nodeType": "EmitStatement",
                        "src": "260:25:0"
                      },
                      {
                        "expression": {
                          "hexValue": "307831323334",
                          "id": 16,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "303:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_1ac7d1b81b7ba1025b36ccb86723da6ee5a87259f1c2fd5abe69d3200b512ec8",
                            "typeString": "literal_string \"0x1234\""
                          },
                          "value": "0x1234"
                        },
                        "functionReturnParameters": 12,
                        "id": 17,
                        "nodeType": "Return",
                        "src": "296:15:0"
                      }
                    ]
                  },
                  "functionSelector": "3e6fec04",
                  "id": 19,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mockFunction",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 9,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "208:2:0"
                  },
                  "returnParameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 11,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 19,
                        "src": "235:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "235:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "234:15:0"
                  },
                  "scope": 93,
                  "src": "187:131:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 29,
                    "nodeType": "Block",
                    "src": "389:68:0",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 24,
                            "name": "MockFunctionCalled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5,
                            "src": "404:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 25,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "404:20:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 26,
                        "nodeType": "EmitStatement",
                        "src": "399:25:0"
                      },
                      {
                        "expression": {
                          "hexValue": "307831323334",
                          "id": 27,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "442:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_1ac7d1b81b7ba1025b36ccb86723da6ee5a87259f1c2fd5abe69d3200b512ec8",
                            "typeString": "literal_string \"0x1234\""
                          },
                          "value": "0x1234"
                        },
                        "functionReturnParameters": 23,
                        "id": 28,
                        "nodeType": "Return",
                        "src": "435:15:0"
                      }
                    ]
                  },
                  "functionSelector": "0f63e42c",
                  "id": 30,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mockFunctionNonPayable",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 20,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "355:2:0"
                  },
                  "returnParameters": {
                    "id": 23,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 22,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 30,
                        "src": "374:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 21,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "374:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "373:15:0"
                  },
                  "scope": 93,
                  "src": "324:133:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 37,
                    "nodeType": "Block",
                    "src": "529:32:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "307831323334",
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "546:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_1ac7d1b81b7ba1025b36ccb86723da6ee5a87259f1c2fd5abe69d3200b512ec8",
                            "typeString": "literal_string \"0x1234\""
                          },
                          "value": "0x1234"
                        },
                        "functionReturnParameters": 34,
                        "id": 36,
                        "nodeType": "Return",
                        "src": "539:15:0"
                      }
                    ]
                  },
                  "functionSelector": "c8fc7696",
                  "id": 38,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mockStaticFunction",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 31,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "490:2:0"
                  },
                  "returnParameters": {
                    "id": 34,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 33,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 38,
                        "src": "514:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 32,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "514:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "513:15:0"
                  },
                  "scope": 93,
                  "src": "463:98:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 44,
                    "nodeType": "Block",
                    "src": "621:25:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 41,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "631:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 42,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "631:8:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 43,
                        "nodeType": "ExpressionStatement",
                        "src": "631:8:0"
                      }
                    ]
                  },
                  "functionSelector": "2c81d638",
                  "id": 45,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mockFunctionRevertsNoReason",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 39,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "603:2:0"
                  },
                  "returnParameters": {
                    "id": 40,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "621:0:0"
                  },
                  "scope": 93,
                  "src": "567:79:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 52,
                    "nodeType": "Block",
                    "src": "704:54:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "43616c6c52656365697665724d6f636b3a20726576657274696e67",
                              "id": 49,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "721:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1fa67ffa712c128062681134b4f6fcc189b02b2cec4822b38d0f01b87c9ef80f",
                                "typeString": "literal_string \"CallReceiverMock: reverting\""
                              },
                              "value": "CallReceiverMock: reverting"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_1fa67ffa712c128062681134b4f6fcc189b02b2cec4822b38d0f01b87c9ef80f",
                                "typeString": "literal_string \"CallReceiverMock: reverting\""
                              }
                            ],
                            "id": 48,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "714:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 50,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "714:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 51,
                        "nodeType": "ExpressionStatement",
                        "src": "714:37:0"
                      }
                    ]
                  },
                  "functionSelector": "0c034968",
                  "id": 53,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mockFunctionRevertsReason",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 46,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "686:2:0"
                  },
                  "returnParameters": {
                    "id": 47,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "704:0:0"
                  },
                  "scope": 93,
                  "src": "652:106:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 60,
                    "nodeType": "Block",
                    "src": "809:30:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "66616c7365",
                              "id": 57,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "826:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 56,
                            "name": "assert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -3,
                            "src": "819:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 58,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "819:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 59,
                        "nodeType": "ExpressionStatement",
                        "src": "819:13:0"
                      }
                    ]
                  },
                  "functionSelector": "3bcfaa14",
                  "id": 61,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mockFunctionThrows",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 54,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "791:2:0"
                  },
                  "returnParameters": {
                    "id": 55,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "809:0:0"
                  },
                  "scope": 93,
                  "src": "764:75:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 79,
                    "nodeType": "Block",
                    "src": "892:82:0",
                    "statements": [
                      {
                        "body": {
                          "id": 77,
                          "nodeType": "Block",
                          "src": "929:39:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 74,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 65,
                                    "src": "955:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 71,
                                    "name": "_array",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8,
                                    "src": "943:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 73,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "943:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 75,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "943:14:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 76,
                              "nodeType": "ExpressionStatement",
                              "src": "943:14:0"
                            }
                          ]
                        },
                        "id": 78,
                        "initializationExpression": {
                          "assignments": [
                            65
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 65,
                              "mutability": "mutable",
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "scope": 78,
                              "src": "907:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 64,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "907:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 67,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 66,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "919:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "907:13:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 69,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": true,
                            "src": "924:3:0",
                            "subExpression": {
                              "id": 68,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65,
                              "src": "926:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 70,
                          "nodeType": "ExpressionStatement",
                          "src": "924:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "902:66:0"
                      }
                    ]
                  },
                  "functionSelector": "a793ab47",
                  "id": 80,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mockFunctionOutOfGas",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 62,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "874:2:0"
                  },
                  "returnParameters": {
                    "id": 63,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:0:0"
                  },
                  "scope": 93,
                  "src": "845:129:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 91,
                    "nodeType": "Block",
                    "src": "1048:61:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 87,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 85,
                            "name": "sharedAnswer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3,
                            "src": "1058:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "3432",
                            "id": 86,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1073:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_ccb1f717aa77602faf03a594761a36956b1c4cf44c6b336d1db57da799b331b8",
                              "typeString": "literal_string \"42\""
                            },
                            "value": "42"
                          },
                          "src": "1058:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 88,
                        "nodeType": "ExpressionStatement",
                        "src": "1058:19:0"
                      },
                      {
                        "expression": {
                          "hexValue": "307831323334",
                          "id": 89,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1094:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_1ac7d1b81b7ba1025b36ccb86723da6ee5a87259f1c2fd5abe69d3200b512ec8",
                            "typeString": "literal_string \"0x1234\""
                          },
                          "value": "0x1234"
                        },
                        "functionReturnParameters": 84,
                        "id": 90,
                        "nodeType": "Return",
                        "src": "1087:15:0"
                      }
                    ]
                  },
                  "functionSelector": "aa04f77e",
                  "id": 92,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mockFunctionWritesStorage",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 81,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1014:2:0"
                  },
                  "returnParameters": {
                    "id": 84,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 83,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 92,
                        "src": "1033:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 82,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1033:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1032:15:0"
                  },
                  "scope": 93,
                  "src": "980:129:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 94,
              "src": "58:1053:0"
            }
          ],
          "src": "33:1079:0"
        }
      }
    },
    "errors": [],
    "version": "0.7.4",
    "long_version": "0.7.4+commit.3f05b770.Darwin.appleclang",
    "zk_version": "1.3.10"
  }
}
