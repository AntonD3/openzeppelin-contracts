{
  "id": "718bf3099d199f224cf9088d662cc664",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.7.4",
  "solcLongVersion": "0.7.4+commit.3f05b770",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/introspection/ERC165Checker.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\n/**\n * @dev Library used to query support of an interface declared via {IERC165}.\n *\n * Note that these functions return the actual result of the query: they do not\n * `revert` if an interface is not supported. It is up to the caller to decide\n * what to do in these cases.\n */\nlibrary ERC165Checker {\n    // As per the EIP-165 spec, no interface should ever match 0xffffffff\n    bytes4 private constant _INTERFACE_ID_INVALID = 0xffffffff;\n\n    /*\n     * bytes4(keccak256('supportsInterface(bytes4)')) == 0x01ffc9a7\n     */\n    bytes4 private constant _INTERFACE_ID_ERC165 = 0x01ffc9a7;\n\n    /**\n     * @dev Returns true if `account` supports the {IERC165} interface,\n     */\n    function supportsERC165(address account) internal view returns (bool) {\n        // Any contract that implements ERC165 must explicitly indicate support of\n        // InterfaceId_ERC165 and explicitly indicate non-support of InterfaceId_Invalid\n        return _supportsERC165Interface(account, _INTERFACE_ID_ERC165) &&\n            !_supportsERC165Interface(account, _INTERFACE_ID_INVALID);\n    }\n\n    /**\n     * @dev Returns true if `account` supports the interface defined by\n     * `interfaceId`. Support for {IERC165} itself is queried automatically.\n     *\n     * See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(address account, bytes4 interfaceId) internal view returns (bool) {\n        // query support of both ERC165 as per the spec and support of _interfaceId\n        return supportsERC165(account) &&\n            _supportsERC165Interface(account, interfaceId);\n    }\n\n    /**\n     * @dev Returns a boolean array where each value corresponds to the\n     * interfaces passed in and whether they're supported or not. This allows\n     * you to batch check interfaces for a contract where your expectation\n     * is that some interfaces may not be supported.\n     *\n     * See {IERC165-supportsInterface}.\n     *\n     * _Available since v3.4._\n     */\n    function getSupportedInterfaces(address account, bytes4[] memory interfaceIds) internal view returns (bool[] memory) {\n        // an array of booleans corresponding to interfaceIds and whether they're supported or not\n        bool[] memory interfaceIdsSupported = new bool[](interfaceIds.length);\n\n        // query support of ERC165 itself\n        if (supportsERC165(account)) {\n            // query support of each interface in interfaceIds\n            for (uint256 i = 0; i < interfaceIds.length; i++) {\n                interfaceIdsSupported[i] = _supportsERC165Interface(account, interfaceIds[i]);\n            }\n        }\n\n        return interfaceIdsSupported;\n    }\n\n    /**\n     * @dev Returns true if `account` supports all the interfaces defined in\n     * `interfaceIds`. Support for {IERC165} itself is queried automatically.\n     *\n     * Batch-querying can lead to gas savings by skipping repeated checks for\n     * {IERC165} support.\n     *\n     * See {IERC165-supportsInterface}.\n     */\n    function supportsAllInterfaces(address account, bytes4[] memory interfaceIds) internal view returns (bool) {\n        // query support of ERC165 itself\n        if (!supportsERC165(account)) {\n            return false;\n        }\n\n        // query support of each interface in _interfaceIds\n        for (uint256 i = 0; i < interfaceIds.length; i++) {\n            if (!_supportsERC165Interface(account, interfaceIds[i])) {\n                return false;\n            }\n        }\n\n        // all interfaces supported\n        return true;\n    }\n\n    /**\n     * @notice Query if a contract implements an interface, does not check ERC165 support\n     * @param account The address of the contract to query for support of an interface\n     * @param interfaceId The interface identifier, as specified in ERC-165\n     * @return true if the contract at account indicates support of the interface with\n     * identifier interfaceId, false otherwise\n     * @dev Assumes that account contains a contract that supports ERC165, otherwise\n     * the behavior of this method is undefined. This precondition can be checked\n     * with {supportsERC165}.\n     * Interface identification is specified in ERC-165.\n     */\n    function _supportsERC165Interface(address account, bytes4 interfaceId) private view returns (bool) {\n        // success determines whether the staticcall succeeded and result determines\n        // whether the contract at account indicates support of _interfaceId\n        (bool success, bool result) = _callERC165SupportsInterface(account, interfaceId);\n\n        return (success && result);\n    }\n\n    /**\n     * @notice Calls the function with selector 0x01ffc9a7 (ERC165) and suppresses throw\n     * @param account The address of the contract to query for support of an interface\n     * @param interfaceId The interface identifier, as specified in ERC-165\n     * @return success true if the STATICCALL succeeded, false otherwise\n     * @return result true if the STATICCALL succeeded and the contract at account\n     * indicates support of the interface with identifier interfaceId, false otherwise\n     */\n    function _callERC165SupportsInterface(address account, bytes4 interfaceId)\n        private\n        view\n        returns (bool, bool)\n    {\n        bytes memory encodedParams = abi.encodeWithSelector(_INTERFACE_ID_ERC165, interfaceId);\n        (bool success, bytes memory result) = account.staticcall{ gas: 30000 }(encodedParams);\n        if (result.length < 32) return (false, false);\n        return (success, abi.decode(result, (bool)));\n    }\n}\n"
      },
      "contracts/mocks/ERC165CheckerMock.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.0;\n\nimport \"../introspection/ERC165Checker.sol\";\n\ncontract ERC165CheckerMock {\n    using ERC165Checker for address;\n\n    function supportsERC165(address account) public view returns (bool) {\n        return account.supportsERC165();\n    }\n\n    function supportsInterface(address account, bytes4 interfaceId) public view returns (bool) {\n        return account.supportsInterface(interfaceId);\n    }\n\n    function supportsAllInterfaces(address account, bytes4[] memory interfaceIds) public view returns (bool) {\n        return account.supportsAllInterfaces(interfaceIds);\n    }\n\n    function getSupportedInterfaces(address account, bytes4[] memory interfaceIds) public view returns (bool[] memory) {\n        return account.getSupportedInterfaces(interfaceIds);\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "mode": "3"
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.methodIdentifiers"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/introspection/ERC165Checker.sol": {
        "ERC165Checker": {
          "abi": [],
          "metadata": {
            "optimizer_settings": "M3B3",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library used to query support of an interface declared via {IERC165}. Note that these functions return the actual result of the query: they do not `revert` if an interface is not supported. It is up to the caller to decide what to do in these cases.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/introspection/ERC165Checker.sol\":\"ERC165Checker\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"NdhfoDgvulfnTUtnIf[xarrscLMcCTUtTOntnfDIulLculVcul jjTpeulxarulrulxarrcLgvifCTUcarrLsTOtfDncarrIulc]jmuljuljul VcTOcul jmulN\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/introspection/ERC165Checker.sol\":{\"keccak256\":\"0xf5ac6899b73bdbd71ce519592013682b5df79ea3e0e59a6bdd26d15ff14974d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c827294230ea691cace83a0667aa49c6693e3f0a123a2434a2e5becaaeeed95\",\"dweb:/ipfs/QmeaFDyVs2urS8D8d2yAbChzDELtWRkMDGNFWXZegtnSak\"]}},\"version\":1}",
            "zk_version": "1.3.12"
          },
          "evm": {
            "legacyAssembly": null,
            "assembly": "\t.text\n\t.file\t\"ERC165Checker.sol:ERC165Checker\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tand!\t1, r2, r1\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_1:\n\tld.1\t11, r1\n\tand\t@CPI0_0[0], r1, r1\n\tor\t@CPI0_1[0], r1, r1\n\tst.1\t11, r1\n\tcontext.this\tr1\n\tst.1\t0, r1\n\tld.1\t11, r1\n\tand\t@CPI0_0[0], r1, r1\n\tor\t@CPI0_1[0], r1, r1\n\tst.1\t11, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_2[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.func_end0:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 452312848583266388373324160190187140051835877600158453279131187530910662655\nCPI0_1:\n\t.cell 52015977587075634662932278421871521105961125924018222127100086566054726205440\nCPI0_2:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\n",
            "bytecode": {
              "object": "0000000101200190000000060000c13d0000008001000039000000400010043f000000000100001900000017000104300000000b0100043d000000070110019700000008011001c70000000b0010043f000000000100041000000000001004350000000b0100043d000000070110019700000008011001c70000000b0010043f0000002001000039000001000010044300000120000004430000000901000041000000160001042e0000001500000432000000160001042e0000001700010430000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff73000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000c734d578105ec0c2ae2b256a00b0f4084ec805149fe31bf5ce690fb6bebe4379"
            },
            "methodIdentifiers": {}
          },
          "hash": "0100000b466b36c5c8780b25c7eadc66e5d7d701ba5cccf730c86c5d26423964",
          "factoryDependencies": {}
        }
      },
      "contracts/mocks/ERC165CheckerMock.sol": {
        "ERC165CheckerMock": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "interfaceIds",
                  "type": "bytes4[]"
                }
              ],
              "name": "getSupportedInterfaces",
              "outputs": [
                {
                  "internalType": "bool[]",
                  "name": "",
                  "type": "bool[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "interfaceIds",
                  "type": "bytes4[]"
                }
              ],
              "name": "supportsAllInterfaces",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "supportsERC165",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "metadata": {
            "optimizer_settings": "M3B3",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.7.4+commit.3f05b770\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"interfaceIds\",\"type\":\"bytes4[]\"}],\"name\":\"getSupportedInterfaces\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"interfaceIds\",\"type\":\"bytes4[]\"}],\"name\":\"supportsAllInterfaces\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"supportsERC165\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mocks/ERC165CheckerMock.sol\":\"ERC165CheckerMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":true,\"deduplicate\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"NdhfoDgvulfnTUtnIf[xarrscLMcCTUtTOntnfDIulLculVcul jjTpeulxarulrulxarrcLgvifCTUcarrLsTOtfDncarrIulc]jmuljuljul VcTOcul jmulN\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/introspection/ERC165Checker.sol\":{\"keccak256\":\"0xf5ac6899b73bdbd71ce519592013682b5df79ea3e0e59a6bdd26d15ff14974d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c827294230ea691cace83a0667aa49c6693e3f0a123a2434a2e5becaaeeed95\",\"dweb:/ipfs/QmeaFDyVs2urS8D8d2yAbChzDELtWRkMDGNFWXZegtnSak\"]},\"contracts/mocks/ERC165CheckerMock.sol\":{\"keccak256\":\"0xf7e3511e54440e8a339cc19dc63863f0a23e20b44a517935fc9041b642c2132b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b0bc81c97d9a90b55536506c5a212a443b773a11870e7b18dd8e1da430f276d\",\"dweb:/ipfs/QmPrE1LwNBUjfGW5owjuavQGKLHWJgiuwyssTLVnyZtnnX\"]}},\"version\":1}",
            "zk_version": "1.3.12"
          },
          "evm": {
            "legacyAssembly": null,
            "assembly": "\t.text\n\t.file\t\"ERC165CheckerMock.sol:ERC165CheckerMock\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tnop\tstack+=[9]\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r4\n\tptr.add\tr1, r4, stack[@ptr_return_data]\n\tptr.add\tr1, r0, stack[@ptr_calldata]\n\tand\t@CPI0_0[0], r3, stack[@calldatasize]\n\tadd\t0, r0, stack[@returndatasize]\n\tadd\t128, r0, r1\n\tst.1\t64, r1\n\tcontext.get_context_u128\tr1\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_3\n\tadd\tstack[@calldatasize], r0, r1\n\tsub.s!\t4, r1, r2\n\tjump.lt\t@.BB0_3\n\tptr.add\tstack[@ptr_calldata], r0, r2\n\tld\tr2, r3\n\tshr.s\t224, r3, r3\n\tsub.s!\t@CPI0_2[0], r3, r4\n\tjump.ne\t@.BB0_114\n\tsub.s\t68, r1, r3\n\tsub.s\t64, r0, r4\n\tsub!\tr3, r4, r3\n\tjump.ge\t@.BB0_3\n\tptr.add.s\t4, r2, r3\n\tld\tr3, r3\n\tand\t@CPI0_9[0], r3, r10\n\tptr.add.s\t36, r2, r3\n\tld\tr3, r4\n\tsub.s!\t@CPI0_11[0], r4, r3\n\tjump.gt\t@.BB0_3\n\tadd\t36, r4, r3\n\tsub!\tr3, r1, r5\n\tjump.gt\t@.BB0_3\n\tadd\t4, r4, r4\n\tptr.add\tr2, r4, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_11[0], r2, r4\n\tjump.gt\t@.BB0_3\n\tshl.s\t5, r2, r4\n\tadd\tr4, r3, r5\n\tsub!\tr5, r1, r1\n\tjump.gt\t@.BB0_3\n\tld.1\t64, r5\n\tadd\t32, r5, r11\n\tadd\tr11, r4, r1\n\tst.1\t64, r1\n\tadd\tr5, r0, stack-[9]\n\tst.1\tr5, r2\n\tand\t31, r4, r2\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB0_229\n\tadd\tr0, r0, r5\n.BB0_15:\n\tshl.s\t5, r5, r6\n\tadd\tr11, r6, r7\n\tptr.add\tr3, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_15\n.BB0_229:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_17\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tadd\tr11, r4, r4\n\tshl.s\t3, r2, r2\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB0_17:\n\tst.1\tr1, r0\n\tld.1\t64, r1\n\tadd\t36, r1, r2\n\tadd\t@CPI0_6[0], r0, r3\n\tst.1\tr2, r3\n\tld.1\t64, r4\n\tsub\tr2, r4, r2\n\tst.1.inc\tr4, r2, r3\n\tadd\t68, r1, r1\n\tst.1\t64, r1\n\tld.1\tr3, r1\n\tand\t@CPI0_7[0], r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tst.1\tr3, r1\n\tld.1\t64, r1\n\tld.1\tr4, r2\n\tsub.s!\t32, r2, r4\n\tadd\tr2, r0, r5\n\tadd\tr1, r0, r4\n\tjump.lt\t@.BB0_69\n\tadd\tr1, r0, r4\n\tadd\tr2, r0, r5\n.BB0_138:\n\tld.1.inc\tr3, r6, r3\n\tst.1.inc\tr4, r6, r4\n\tsub.s\t32, r5, r5\n\tsub.s!\t32, r5, r6\n\tjump.ge\t@.BB0_138\n.BB0_69:\n\tadd\t256, r0, r7\n\tadd\t1, r0, r6\n\tsub\t32, r5, r5\n.BB0_70:\n\tand!\t1, r5, r8\n\tadd\tr7, r0, r8\n\tadd.eq\t1, r0, r8\n\tmul\tr8, r6, r6, r8\n\tshr.s\t1, r5, r8\n\tmul\tr7, r7, r7, r9\n\tsub.s!\t1, r5, r5\n\tadd\tr8, r0, r5\n\tjump.gt\t@.BB0_70\n\tld.1\tr3, r3\n\tsub\t0, r6, r5\n\tand\tr3, r5, r3\n\tsub.s\t1, r6, r5\n\tld.1\tr4, r6\n\tand\tr6, r5, r5\n\tor\tr5, r3, r3\n\tst.1\tr4, r3\n\tsub.s!\t4, r10, r3\n\tadd\tr10, r0, stack-[7]\n\tadd\tr11, r0, stack-[6]\n\tjump.ne\t@.BB0_149\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB0_151\n.BB0_1:\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_3\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_1[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_114:\n\tsub.s!\t@CPI0_3[0], r3, r4\n\tjump.ne\t@.BB0_115\n\tsub.s\t68, r1, r3\n\tsub.s\t64, r0, r4\n\tsub!\tr3, r4, r3\n\tjump.ge\t@.BB0_3\n\tptr.add.s\t4, r2, r3\n\tld\tr3, r3\n\tand\t@CPI0_9[0], r3, r10\n\tptr.add.s\t36, r2, r3\n\tld\tr3, r4\n\tsub.s!\t@CPI0_11[0], r4, r3\n\tjump.gt\t@.BB0_3\n\tadd\t36, r4, r3\n\tsub!\tr3, r1, r5\n\tjump.gt\t@.BB0_3\n\tadd\t4, r4, r4\n\tptr.add\tr2, r4, r2\n\tld\tr2, r2\n\tsub.s!\t@CPI0_11[0], r2, r4\n\tjump.gt\t@.BB0_3\n\tshl.s\t5, r2, r4\n\tadd\tr4, r3, r5\n\tsub!\tr5, r1, r1\n\tjump.gt\t@.BB0_3\n\tld.1\t64, r11\n\tadd\t32, r11, r12\n\tadd\tr12, r4, r1\n\tst.1\t64, r1\n\tst.1\tr11, r2\n\tand\t31, r4, r2\n\tptr.add\tstack[@ptr_calldata], r3, r3\n\tshr.s!\t5, r4, r4\n\tjump.eq\t@.BB0_234\n\tadd\tr0, r0, r5\n.BB0_25:\n\tshl.s\t5, r5, r6\n\tadd\tr12, r6, r7\n\tptr.add\tr3, r6, r6\n\tld\tr6, r6\n\tst.1\tr7, r6\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_25\n.BB0_234:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_27\n\tshl.s\t5, r4, r4\n\tptr.add\tr3, r4, r3\n\tadd\tr12, r4, r4\n\tshl.s\t3, r2, r2\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr3, r3\n\tsub\t256, r2, r2\n\tshr\tr3, r2, r3\n\tshl\tr3, r2, r2\n\tor\tr2, r5, r2\n\tst.1\tr4, r2\n.BB0_27:\n\tst.1\tr1, r0\n\tld.1\tr11, r2\n\tsub.s!\t@CPI0_12[0], r2, r1\n\tjump.ge\t@.BB0_3\n\tld.1\t64, r14\n\tst.1.inc\tr14, r2, r13\n\tshl.s\t5, r2, r3\n\tadd\tr13, r3, r1\n\tst.1\t64, r1\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_38\n\tand\t31, r3, r1\n\tadd\tstack[@calldatasize], r0, r2\n\tptr.add\tstack[@ptr_calldata], r2, r2\n\tshr.s!\t5, r3, r3\n\tjump.eq\t@.BB0_233\n\tadd\tr0, r0, r4\n.BB0_123:\n\tshl.s\t5, r4, r5\n\tadd\tr13, r5, r6\n\tptr.add\tr2, r5, r5\n\tld\tr5, r5\n\tst.1\tr6, r5\n\tadd\t1, r4, r4\n\tsub!\tr4, r3, r5\n\tjump.lt\t@.BB0_123\n.BB0_233:\n\tsub!\tr1, r0, r4\n\tjump.eq\t@.BB0_125\n\tshl.s\t5, r3, r3\n\tptr.add\tr2, r3, r2\n\tadd\tr13, r3, r3\n\tshl.s\t3, r1, r1\n\tld.1\tr3, r4\n\tshl\tr4, r1, r4\n\tshr\tr4, r1, r4\n\tld\tr2, r2\n\tsub\t256, r1, r1\n\tshr\tr2, r1, r2\n\tshl\tr2, r1, r1\n\tor\tr1, r4, r1\n\tst.1\tr3, r1\n.BB0_125:\n\tld.1\t64, r1\n.BB0_38:\n\tadd\t36, r1, r2\n\tadd\t@CPI0_6[0], r0, r3\n\tst.1\tr2, r3\n\tld.1\t64, r4\n\tsub\tr2, r4, r2\n\tst.1.inc\tr4, r2, r3\n\tadd\t68, r1, r1\n\tst.1\t64, r1\n\tld.1\tr3, r1\n\tand\t@CPI0_7[0], r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tst.1\tr3, r1\n\tld.1\t64, r1\n\tld.1\tr4, r2\n\tsub.s!\t32, r2, r4\n\tadd\tr2, r0, r5\n\tadd\tr1, r0, r4\n\tjump.lt\t@.BB0_78\n\tadd\tr1, r0, r4\n\tadd\tr2, r0, r5\n.BB0_141:\n\tld.1.inc\tr3, r6, r3\n\tst.1.inc\tr4, r6, r4\n\tsub.s\t32, r5, r5\n\tsub.s!\t32, r5, r6\n\tjump.ge\t@.BB0_141\n.BB0_78:\n\tadd\t256, r0, r7\n\tadd\t1, r0, r6\n\tsub\t32, r5, r5\n.BB0_79:\n\tand!\t1, r5, r8\n\tadd\tr7, r0, r8\n\tadd.eq\t1, r0, r8\n\tmul\tr8, r6, r6, r8\n\tshr.s\t1, r5, r8\n\tmul\tr7, r7, r7, r9\n\tsub.s!\t1, r5, r5\n\tadd\tr8, r0, r5\n\tjump.gt\t@.BB0_79\n\tld.1\tr3, r3\n\tsub\t0, r6, r5\n\tand\tr3, r5, r3\n\tsub.s\t1, r6, r5\n\tld.1\tr4, r6\n\tand\tr6, r5, r5\n\tor\tr5, r3, r3\n\tst.1\tr4, r3\n\tsub.s!\t4, r10, r3\n\tadd\tr10, r0, stack-[6]\n\tadd\tr11, r0, stack-[5]\n\tadd\tr12, r0, stack-[4]\n\tadd\tr13, r0, stack-[3]\n\tadd\tr14, r0, stack-[2]\n\tjump.ne\t@.BB0_170\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB0_172\n.BB0_115:\n\tsub.s!\t@CPI0_4[0], r3, r4\n\tjump.ne\t@.BB0_116\n\tsub.s\t36, r1, r1\n\tsub.s\t32, r0, r10\n\tsub!\tr1, r10, r1\n\tjump.ge\t@.BB0_3\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tld.1\t64, r2\n\tadd\t36, r2, r3\n\tadd\t@CPI0_6[0], r0, r4\n\tst.1\tr3, r4\n\tld.1\t64, r4\n\tsub\tr3, r4, r3\n\tst.1.inc\tr4, r3, r3\n\tadd\t68, r2, r2\n\tst.1\t64, r2\n\tld.1\tr3, r2\n\tand\t@CPI0_7[0], r2, r2\n\tor\t@CPI0_6[0], r2, r2\n\tst.1\tr3, r2\n\tand\t@CPI0_9[0], r1, r11\n\tld.1\t64, r1\n\tld.1\tr4, r2\n\tsub.s!\t32, r2, r4\n\tadd\tr2, r0, r5\n\tadd\tr1, r0, r4\n\tjump.lt\t@.BB0_87\n\tadd\tr1, r0, r4\n\tadd\tr2, r0, r5\n.BB0_144:\n\tld.1.inc\tr3, r6, r3\n\tst.1.inc\tr4, r6, r4\n\tsub.s\t32, r5, r5\n\tsub.s!\t32, r5, r6\n\tjump.ge\t@.BB0_144\n.BB0_87:\n\tadd\t256, r0, r7\n\tadd\t1, r0, r6\n\tsub\t32, r5, r5\n.BB0_88:\n\tand!\t1, r5, r8\n\tadd\tr7, r0, r8\n\tadd.eq\t1, r0, r8\n\tmul\tr8, r6, r6, r8\n\tshr.s\t1, r5, r8\n\tmul\tr7, r7, r7, r9\n\tsub.s!\t1, r5, r5\n\tadd\tr8, r0, r5\n\tjump.gt\t@.BB0_88\n\tld.1\tr3, r3\n\tsub\t0, r6, r5\n\tand\tr3, r5, r3\n\tsub.s\t1, r6, r5\n\tld.1\tr4, r6\n\tand\tr6, r5, r5\n\tor\tr5, r3, r3\n\tst.1\tr4, r3\n\tsub.s!\t4, r11, r3\n\tjump.ne\t@.BB0_191\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB0_193\n.BB0_116:\n\tsub.s!\t@CPI0_5[0], r3, r3\n\tjump.ne\t@.BB0_3\n\tsub.s\t68, r1, r1\n\tsub.s\t64, r0, r3\n\tsub!\tr1, r3, r1\n\tjump.ge\t@.BB0_3\n\tptr.add.s\t4, r2, r1\n\tld\tr1, r1\n\tptr.add.s\t36, r2, r2\n\tld\tr2, r2\n\tld.1\t64, r4\n\tadd\t36, r4, r3\n\tadd\t@CPI0_6[0], r0, r5\n\tst.1\tr3, r5\n\tld.1\t64, r5\n\tsub\tr3, r5, r3\n\tst.1.inc\tr5, r3, r3\n\tadd\t68, r4, r4\n\tst.1\t64, r4\n\tld.1\tr3, r4\n\tand\t@CPI0_7[0], r4, r4\n\tor\t@CPI0_6[0], r4, r4\n\tst.1\tr3, r4\n\tand\t@CPI0_8[0], r2, r2\n\tadd\tr2, r0, stack-[8]\n\tand\t@CPI0_9[0], r1, r10\n\tld.1\t64, r1\n\tld.1\tr5, r2\n\tsub.s!\t32, r2, r4\n\tadd\tr2, r0, r5\n\tadd\tr1, r0, r4\n\tjump.lt\t@.BB0_93\n\tadd\tr1, r0, r4\n\tadd\tr2, r0, r5\n.BB0_146:\n\tld.1.inc\tr3, r6, r3\n\tst.1.inc\tr4, r6, r4\n\tsub.s\t32, r5, r5\n\tsub.s!\t32, r5, r6\n\tjump.ge\t@.BB0_146\n.BB0_93:\n\tadd\t256, r0, r7\n\tadd\t1, r0, r6\n\tsub\t32, r5, r5\n.BB0_94:\n\tand!\t1, r5, r8\n\tadd\tr7, r0, r8\n\tadd.eq\t1, r0, r8\n\tmul\tr8, r6, r6, r8\n\tshr.s\t1, r5, r8\n\tmul\tr7, r7, r7, r9\n\tsub.s!\t1, r5, r5\n\tadd\tr8, r0, r5\n\tjump.gt\t@.BB0_94\n\tld.1\tr3, r3\n\tsub\t0, r6, r5\n\tand\tr3, r5, r3\n\tsub.s\t1, r6, r5\n\tld.1\tr4, r6\n\tand\tr6, r5, r5\n\tor\tr5, r3, r3\n\tst.1\tr4, r3\n\tsub.s!\t4, r10, r3\n\tjump.ne\t@.BB0_205\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB0_207\n.BB0_191:\n\tadd\tr2, r1, r1\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\tr11, r0, r2\n\tadd\tr10, r0, stack-[9]\n\tadd\tr11, r0, stack-[8]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r11\n\tadd\tstack-[9], r0, r10\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r3\n.BB0_193:\n\tadd\t96, r0, r1\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_108\n\tadd\t63, r3, r1\n\tand\tr1, r10, r3\n\tld.1\t64, r1\n\tadd\tr1, r3, r3\n\tst.1\t64, r3\n\tadd\tstack[@returndatasize], r0, r3\n\tst.1.inc\tr1, r3, r3\n\tptr.add\tstack[@ptr_return_data], r0, r4\n\tadd\tstack[@returndatasize], r0, r6\n\tand\t31, r6, r5\n\tshr.s!\t5, r6, r6\n\tjump.eq\t@.BB0_236\n\tadd\tr0, r0, r7\n.BB0_196:\n\tshl.s\t5, r7, r8\n\tadd\tr3, r8, r9\n\tptr.add\tr4, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_196\n.BB0_236:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_108\n\tshl.s\t5, r6, r6\n\tptr.add\tr4, r6, r4\n\tadd\tr3, r6, r3\n\tshl.s\t3, r5, r5\n\tld.1\tr3, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr4, r4\n\tsub\t256, r5, r5\n\tshr\tr4, r5, r4\n\tshl\tr4, r5, r4\n\tor\tr4, r6, r4\n\tst.1\tr3, r4\n.BB0_108:\n\tld.1.inc\tr1, r1, r3\n\tsub.s!\t31, r1, r1\n\tadd\tr0, r0, r1\n\tjump.le\t@.BB0_33\n\tsub!\tr2, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_33\n\tld.1\tr3, r1\n\tsub!\tr1, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_33\n\tld.1\t64, r1\n\tadd\t36, r1, r2\n\tadd\t@CPI0_8[0], r0, r3\n\tst.1\tr2, r3\n\tld.1\t64, r4\n\tsub\tr2, r4, r2\n\tst.1.inc\tr4, r2, r3\n\tadd\t68, r1, r1\n\tst.1\t64, r1\n\tld.1\tr3, r1\n\tand\t@CPI0_7[0], r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tst.1\tr3, r1\n\tld.1\t64, r1\n\tld.1\tr4, r2\n\tsub.s!\t32, r2, r4\n\tadd\tr2, r0, r5\n\tadd\tr1, r0, r4\n\tjump.lt\t@.BB0_90\n\tadd\tr1, r0, r4\n\tadd\tr2, r0, r5\n.BB0_145:\n\tld.1.inc\tr3, r6, r3\n\tst.1.inc\tr4, r6, r4\n\tsub.s\t32, r5, r5\n\tsub.s!\t32, r5, r6\n\tjump.ge\t@.BB0_145\n.BB0_90:\n\tadd\t256, r0, r7\n\tadd\t1, r0, r6\n\tsub\t32, r5, r5\n.BB0_91:\n\tand!\t1, r5, r8\n\tadd\tr7, r0, r8\n\tadd.eq\t1, r0, r8\n\tmul\tr8, r6, r6, r8\n\tshr.s\t1, r5, r8\n\tmul\tr7, r7, r7, r9\n\tsub.s!\t1, r5, r5\n\tadd\tr8, r0, r5\n\tjump.gt\t@.BB0_91\n\tld.1\tr3, r3\n\tsub\t0, r6, r5\n\tand\tr3, r5, r3\n\tsub.s\t1, r6, r5\n\tld.1\tr4, r6\n\tand\tr6, r5, r5\n\tor\tr5, r3, r3\n\tst.1\tr4, r3\n\tsub.s!\t4, r11, r3\n\tjump.ne\t@.BB0_198\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB0_200\n.BB0_205:\n\tadd\tr2, r1, r1\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\tr10, r0, r2\n\tadd\tr10, r0, stack-[9]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r10\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r3\n.BB0_207:\n\tadd\t96, r0, r1\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_110\n\tadd\t63, r3, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r3\n\tld.1\t64, r1\n\tadd\tr1, r3, r3\n\tst.1\t64, r3\n\tadd\tstack[@returndatasize], r0, r3\n\tst.1.inc\tr1, r3, r3\n\tptr.add\tstack[@ptr_return_data], r0, r4\n\tadd\tstack[@returndatasize], r0, r6\n\tand\t31, r6, r5\n\tshr.s!\t5, r6, r6\n\tjump.eq\t@.BB0_239\n\tadd\tr0, r0, r7\n.BB0_210:\n\tshl.s\t5, r7, r8\n\tadd\tr3, r8, r9\n\tptr.add\tr4, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_210\n.BB0_239:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_110\n\tshl.s\t5, r6, r6\n\tptr.add\tr4, r6, r4\n\tadd\tr3, r6, r3\n\tshl.s\t3, r5, r5\n\tld.1\tr3, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr4, r4\n\tsub\t256, r5, r5\n\tshr\tr4, r5, r4\n\tshl\tr4, r5, r4\n\tor\tr4, r6, r4\n\tst.1\tr3, r4\n.BB0_110:\n\tld.1.inc\tr1, r1, r3\n\tsub.s!\t31, r1, r1\n\tadd\tr0, r0, r1\n\tjump.le\t@.BB0_33\n\tsub!\tr2, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_33\n\tld.1\tr3, r1\n\tsub!\tr1, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_33\n\tld.1\t64, r1\n\tadd\t36, r1, r2\n\tadd\t@CPI0_8[0], r0, r3\n\tst.1\tr2, r3\n\tld.1\t64, r4\n\tsub\tr2, r4, r2\n\tst.1.inc\tr4, r2, r3\n\tadd\t68, r1, r1\n\tst.1\t64, r1\n\tld.1\tr3, r1\n\tand\t@CPI0_7[0], r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tst.1\tr3, r1\n\tld.1\t64, r1\n\tld.1\tr4, r2\n\tsub.s!\t32, r2, r4\n\tadd\tr2, r0, r5\n\tadd\tr1, r0, r4\n\tjump.lt\t@.BB0_99\n\tadd\tr1, r0, r4\n\tadd\tr2, r0, r5\n.BB0_148:\n\tld.1.inc\tr3, r6, r3\n\tst.1.inc\tr4, r6, r4\n\tsub.s\t32, r5, r5\n\tsub.s!\t32, r5, r6\n\tjump.ge\t@.BB0_148\n.BB0_99:\n\tadd\t256, r0, r7\n\tadd\t1, r0, r6\n\tsub\t32, r5, r5\n.BB0_100:\n\tand!\t1, r5, r8\n\tadd\tr7, r0, r8\n\tadd.eq\t1, r0, r8\n\tmul\tr8, r6, r6, r8\n\tshr.s\t1, r5, r8\n\tmul\tr7, r7, r7, r9\n\tsub.s!\t1, r5, r5\n\tadd\tr8, r0, r5\n\tjump.gt\t@.BB0_100\n\tld.1\tr3, r3\n\tsub\t0, r6, r5\n\tand\tr3, r5, r3\n\tsub.s\t1, r6, r5\n\tld.1\tr4, r6\n\tand\tr6, r5, r5\n\tor\tr5, r3, r3\n\tst.1\tr4, r3\n\tsub.s!\t4, r10, r3\n\tjump.ne\t@.BB0_219\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB0_221\n.BB0_149:\n\tadd\tr2, r1, r1\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\tr10, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r11\n\tadd\tstack-[7], r0, r10\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r3\n.BB0_151:\n\tadd\t96, r0, r1\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_102\n\tadd\t63, r3, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r3\n\tld.1\t64, r1\n\tadd\tr1, r3, r3\n\tst.1\t64, r3\n\tadd\tstack[@returndatasize], r0, r3\n\tst.1.inc\tr1, r3, r3\n\tptr.add\tstack[@ptr_return_data], r0, r4\n\tadd\tstack[@returndatasize], r0, r6\n\tand\t31, r6, r5\n\tshr.s!\t5, r6, r6\n\tjump.eq\t@.BB0_228\n\tadd\tr0, r0, r7\n.BB0_154:\n\tshl.s\t5, r7, r8\n\tadd\tr3, r8, r9\n\tptr.add\tr4, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_154\n.BB0_228:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_102\n\tshl.s\t5, r6, r6\n\tptr.add\tr4, r6, r4\n\tadd\tr3, r6, r3\n\tshl.s\t3, r5, r5\n\tld.1\tr3, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr4, r4\n\tsub\t256, r5, r5\n\tshr\tr4, r5, r4\n\tshl\tr4, r5, r4\n\tor\tr4, r6, r4\n\tst.1\tr3, r4\n.BB0_102:\n\tld.1.inc\tr1, r1, r3\n\tsub.s!\t31, r1, r1\n\tadd\tr0, r0, r1\n\tjump.le\t@.BB0_33\n\tsub!\tr2, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_33\n\tld.1\tr3, r1\n\tsub!\tr1, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_33\n\tld.1\t64, r1\n\tadd\t36, r1, r2\n\tadd\t@CPI0_8[0], r0, r3\n\tst.1\tr2, r3\n\tld.1\t64, r4\n\tsub\tr2, r4, r2\n\tst.1.inc\tr4, r2, r3\n\tadd\t68, r1, r1\n\tst.1\t64, r1\n\tld.1\tr3, r1\n\tand\t@CPI0_7[0], r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tst.1\tr3, r1\n\tld.1\t64, r1\n\tld.1\tr4, r2\n\tsub.s!\t32, r2, r4\n\tadd\tr2, r0, r5\n\tadd\tr1, r0, r4\n\tjump.lt\t@.BB0_75\n\tadd\tr1, r0, r4\n\tadd\tr2, r0, r5\n.BB0_140:\n\tld.1.inc\tr3, r6, r3\n\tst.1.inc\tr4, r6, r4\n\tsub.s\t32, r5, r5\n\tsub.s!\t32, r5, r6\n\tjump.ge\t@.BB0_140\n.BB0_75:\n\tadd\t256, r0, r7\n\tadd\t1, r0, r6\n\tsub\t32, r5, r5\n.BB0_76:\n\tand!\t1, r5, r8\n\tadd\tr7, r0, r8\n\tadd.eq\t1, r0, r8\n\tmul\tr8, r6, r6, r8\n\tshr.s\t1, r5, r8\n\tmul\tr7, r7, r7, r9\n\tsub.s!\t1, r5, r5\n\tadd\tr8, r0, r5\n\tjump.gt\t@.BB0_76\n\tld.1\tr3, r3\n\tsub\t0, r6, r5\n\tand\tr3, r5, r3\n\tsub.s\t1, r6, r5\n\tld.1\tr4, r6\n\tand\tr6, r5, r5\n\tor\tr5, r3, r3\n\tst.1\tr4, r3\n\tsub.s!\t4, r10, r3\n\tjump.ne\t@.BB0_163\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB0_165\n.BB0_198:\n\tadd\tr2, r1, r1\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\tr11, r0, r2\n\tadd\tr10, r0, stack-[9]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r10\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r3\n.BB0_200:\n\tadd\t96, r0, r1\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_109\n\tadd\t63, r3, r1\n\tand\tr1, r10, r3\n\tld.1\t64, r1\n\tadd\tr1, r3, r3\n\tst.1\t64, r3\n\tadd\tstack[@returndatasize], r0, r3\n\tst.1.inc\tr1, r3, r3\n\tptr.add\tstack[@ptr_return_data], r0, r4\n\tadd\tstack[@returndatasize], r0, r6\n\tand\t31, r6, r5\n\tshr.s!\t5, r6, r6\n\tjump.eq\t@.BB0_235\n\tadd\tr0, r0, r7\n.BB0_203:\n\tshl.s\t5, r7, r8\n\tadd\tr3, r8, r9\n\tptr.add\tr4, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_203\n.BB0_235:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_109\n\tshl.s\t5, r6, r6\n\tptr.add\tr4, r6, r4\n\tadd\tr3, r6, r3\n\tshl.s\t3, r5, r5\n\tld.1\tr3, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr4, r4\n\tsub\t256, r5, r5\n\tshr\tr4, r5, r4\n\tshl\tr4, r5, r4\n\tor\tr4, r6, r4\n\tst.1\tr3, r4\n.BB0_109:\n\tld.1.inc\tr1, r3, r1\n\tsub.s!\t31, r3, r3\n\tjump.le\t@.BB0_61\n\tld.1\tr1, r1\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_62\n.BB0_61:\n\tadd\tr0, r0, r1\n.BB0_62:\n\tsub!\tr1, r0, r1\n\tadd\t0, r0, r1\n\tadd.eq\t1, r0, r1\n\tjump\t@.BB0_33\n.BB0_219:\n\tadd\tr2, r1, r1\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\tr10, r0, r2\n\tadd\tr10, r0, stack-[9]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[9], r0, r10\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r3\n.BB0_221:\n\tadd\t96, r0, r1\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_112\n\tadd\t63, r3, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r3\n\tld.1\t64, r1\n\tadd\tr1, r3, r3\n\tst.1\t64, r3\n\tadd\tstack[@returndatasize], r0, r3\n\tst.1.inc\tr1, r3, r3\n\tptr.add\tstack[@ptr_return_data], r0, r4\n\tadd\tstack[@returndatasize], r0, r6\n\tand\t31, r6, r5\n\tshr.s!\t5, r6, r6\n\tjump.eq\t@.BB0_238\n\tadd\tr0, r0, r7\n.BB0_224:\n\tshl.s\t5, r7, r8\n\tadd\tr3, r8, r9\n\tptr.add\tr4, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_224\n.BB0_238:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_112\n\tshl.s\t5, r6, r6\n\tptr.add\tr4, r6, r4\n\tadd\tr3, r6, r3\n\tshl.s\t3, r5, r5\n\tld.1\tr3, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr4, r4\n\tsub\t256, r5, r5\n\tshr\tr4, r5, r4\n\tshl\tr4, r5, r4\n\tor\tr4, r6, r4\n\tst.1\tr3, r4\n.BB0_112:\n\tld.1.inc\tr1, r3, r1\n\tsub.s!\t31, r3, r3\n\tjump.le\t@.BB0_136\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_136\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\tr0, r0, r1\n\tjump.ne\t@.BB0_33\n.BB0_136:\n\tld.1\t64, r1\n\tadd\t36, r1, r2\n\tadd\tstack-[8], r0, r3\n\tst.1\tr2, r3\n\tld.1\t64, r4\n\tsub\tr2, r4, r2\n\tst.1.inc\tr4, r2, r3\n\tadd\t68, r1, r1\n\tst.1\t64, r1\n\tld.1\tr3, r1\n\tand\t@CPI0_7[0], r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tst.1\tr3, r1\n\tld.1\t64, r1\n\tld.1\tr4, r2\n\tsub.s!\t32, r2, r4\n\tadd\tr2, r0, r5\n\tadd\tr1, r0, r4\n\tjump.lt\t@.BB0_96\n\tadd\tr1, r0, r4\n\tadd\tr2, r0, r5\n.BB0_147:\n\tld.1.inc\tr3, r6, r3\n\tst.1.inc\tr4, r6, r4\n\tsub.s\t32, r5, r5\n\tsub.s!\t32, r5, r6\n\tjump.ge\t@.BB0_147\n.BB0_96:\n\tadd\t256, r0, r7\n\tadd\t1, r0, r6\n\tsub\t32, r5, r5\n.BB0_97:\n\tand!\t1, r5, r8\n\tadd\tr7, r0, r8\n\tadd.eq\t1, r0, r8\n\tmul\tr8, r6, r6, r8\n\tshr.s\t1, r5, r8\n\tmul\tr7, r7, r7, r9\n\tsub.s!\t1, r5, r5\n\tadd\tr8, r0, r5\n\tjump.gt\t@.BB0_97\n\tld.1\tr3, r3\n\tsub\t0, r6, r5\n\tand\tr3, r5, r3\n\tsub.s\t1, r6, r5\n\tld.1\tr4, r6\n\tand\tr6, r5, r5\n\tor\tr5, r3, r3\n\tst.1\tr4, r3\n\tsub.s!\t4, r10, r3\n\tjump.ne\t@.BB0_212\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB0_214\n.BB0_212:\n\tadd\tr2, r1, r1\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\tr10, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r3\n.BB0_214:\n\tadd\t96, r0, r1\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_111\n\tadd\t63, r3, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r3\n\tld.1\t64, r1\n\tadd\tr1, r3, r3\n\tst.1\t64, r3\n\tadd\tstack[@returndatasize], r0, r3\n\tst.1.inc\tr1, r3, r3\n\tptr.add\tstack[@ptr_return_data], r0, r4\n\tadd\tstack[@returndatasize], r0, r6\n\tand\t31, r6, r5\n\tshr.s!\t5, r6, r6\n\tjump.eq\t@.BB0_237\n\tadd\tr0, r0, r7\n.BB0_217:\n\tshl.s\t5, r7, r8\n\tadd\tr3, r8, r9\n\tptr.add\tr4, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_217\n.BB0_237:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_111\n\tshl.s\t5, r6, r6\n\tptr.add\tr4, r6, r4\n\tadd\tr3, r6, r3\n\tshl.s\t3, r5, r5\n\tld.1\tr3, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr4, r4\n\tsub\t256, r5, r5\n\tshr\tr4, r5, r4\n\tshl\tr4, r5, r4\n\tor\tr4, r6, r4\n\tst.1\tr3, r4\n.BB0_111:\n\tld.1.inc\tr1, r3, r1\n\tsub.s!\t31, r3, r3\n\tjump.le\t@.BB0_66\n\tld.1\tr1, r1\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_33\n.BB0_66:\n\tadd\tr0, r0, r1\n\tjump\t@.BB0_33\n.BB0_170:\n\tadd\tr2, r1, r1\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\tr10, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r14\n\tadd\tstack-[3], r0, r13\n\tadd\tstack-[4], r0, r12\n\tadd\tstack-[5], r0, r11\n\tadd\tstack-[6], r0, r10\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r3\n.BB0_172:\n\tadd\t96, r0, r1\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_105\n\tadd\t63, r3, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r3\n\tld.1\t64, r1\n\tadd\tr1, r3, r3\n\tst.1\t64, r3\n\tadd\tstack[@returndatasize], r0, r3\n\tst.1.inc\tr1, r3, r3\n\tptr.add\tstack[@ptr_return_data], r0, r4\n\tadd\tstack[@returndatasize], r0, r6\n\tand\t31, r6, r5\n\tshr.s!\t5, r6, r6\n\tjump.eq\t@.BB0_232\n\tadd\tr0, r0, r7\n.BB0_175:\n\tshl.s\t5, r7, r8\n\tadd\tr3, r8, r9\n\tptr.add\tr4, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_175\n.BB0_232:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_105\n\tshl.s\t5, r6, r6\n\tptr.add\tr4, r6, r4\n\tadd\tr3, r6, r3\n\tshl.s\t3, r5, r5\n\tld.1\tr3, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr4, r4\n\tsub\t256, r5, r5\n\tshr\tr4, r5, r4\n\tshl\tr4, r5, r4\n\tor\tr4, r6, r4\n\tst.1\tr3, r4\n.BB0_105:\n\tld.1.inc\tr1, r3, r1\n\tsub.s!\t31, r3, r3\n\tjump.le\t@.BB0_34\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_34\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_34\n\tld.1\t64, r1\n\tadd\t36, r1, r2\n\tadd\t@CPI0_8[0], r0, r3\n\tst.1\tr2, r3\n\tld.1\t64, r4\n\tsub\tr2, r4, r2\n\tst.1.inc\tr4, r2, r3\n\tadd\t68, r1, r1\n\tst.1\t64, r1\n\tld.1\tr3, r1\n\tand\t@CPI0_7[0], r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tst.1\tr3, r1\n\tld.1\t64, r1\n\tld.1\tr4, r2\n\tsub.s!\t32, r2, r4\n\tadd\tr2, r0, r5\n\tadd\tr1, r0, r4\n\tjump.lt\t@.BB0_84\n\tadd\tr1, r0, r4\n\tadd\tr2, r0, r5\n.BB0_143:\n\tld.1.inc\tr3, r6, r3\n\tst.1.inc\tr4, r6, r4\n\tsub.s\t32, r5, r5\n\tsub.s!\t32, r5, r6\n\tjump.ge\t@.BB0_143\n.BB0_84:\n\tadd\t256, r0, r7\n\tadd\t1, r0, r6\n\tsub\t32, r5, r5\n.BB0_85:\n\tand!\t1, r5, r8\n\tadd\tr7, r0, r8\n\tadd.eq\t1, r0, r8\n\tmul\tr8, r6, r6, r8\n\tshr.s\t1, r5, r8\n\tmul\tr7, r7, r7, r9\n\tsub.s!\t1, r5, r5\n\tadd\tr8, r0, r5\n\tjump.gt\t@.BB0_85\n\tld.1\tr3, r3\n\tsub\t0, r6, r5\n\tand\tr3, r5, r3\n\tsub.s\t1, r6, r5\n\tld.1\tr4, r6\n\tand\tr6, r5, r5\n\tor\tr5, r3, r3\n\tst.1\tr4, r3\n\tsub.s!\t4, r10, r3\n\tjump.ne\t@.BB0_184\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB0_186\n.BB0_163:\n\tadd\tr2, r1, r1\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\tr10, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[6], r0, r11\n\tadd\tstack-[7], r0, r10\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r3\n.BB0_165:\n\tadd\t96, r0, r1\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_104\n\tadd\t63, r3, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r3\n\tld.1\t64, r1\n\tadd\tr1, r3, r3\n\tst.1\t64, r3\n\tadd\tstack[@returndatasize], r0, r3\n\tst.1.inc\tr1, r3, r3\n\tptr.add\tstack[@ptr_return_data], r0, r4\n\tadd\tstack[@returndatasize], r0, r6\n\tand\t31, r6, r5\n\tshr.s!\t5, r6, r6\n\tjump.eq\t@.BB0_227\n\tadd\tr0, r0, r7\n.BB0_168:\n\tshl.s\t5, r7, r8\n\tadd\tr3, r8, r9\n\tptr.add\tr4, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_168\n.BB0_227:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_104\n\tshl.s\t5, r6, r6\n\tptr.add\tr4, r6, r4\n\tadd\tr3, r6, r3\n\tshl.s\t3, r5, r5\n\tld.1\tr3, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr4, r4\n\tsub\t256, r5, r5\n\tshr\tr4, r5, r4\n\tshl\tr4, r5, r4\n\tor\tr4, r6, r4\n\tst.1\tr3, r4\n.BB0_104:\n\tld.1.inc\tr1, r3, r1\n\tsub.s!\t31, r3, r3\n\tjump.le\t@.BB0_47\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_47\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r1\n\tadd\tr0, r0, r1\n\tjump.ne\t@.BB0_33\n.BB0_47:\n\tadd\t1, r0, r1\n\tadd\tstack-[9], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_33\n\tadd\t256, r0, r12\n\tadd\t1, r0, r13\n\tadd\tr0, r0, r14\n\tadd\tr12, r0, stack-[5]\n\tadd\tr13, r0, stack-[4]\n.BB0_119:\n\tshl.s\t5, r14, r1\n\tadd\tr1, r11, r1\n\tld.1\tr1, r1\n\tand\t@CPI0_8[0], r1, r1\n\tld.1\t64, r2\n\tadd\t36, r2, r3\n\tst.1\tr3, r1\n\tld.1\t64, r4\n\tsub\tr3, r4, r1\n\tst.1.inc\tr4, r1, r3\n\tadd\t68, r2, r1\n\tst.1\t64, r1\n\tld.1\tr3, r1\n\tand\t@CPI0_7[0], r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tst.1\tr3, r1\n\tld.1\t64, r1\n\tld.1\tr4, r2\n\tsub.s!\t32, r2, r4\n\tadd\tr2, r0, r5\n\tadd\tr1, r0, r4\n\tjump.lt\t@.BB0_72\n\tadd\tr1, r0, r4\n\tadd\tr2, r0, r5\n.BB0_139:\n\tld.1.inc\tr3, r6, r3\n\tst.1.inc\tr4, r6, r4\n\tsub.s\t32, r5, r5\n\tsub.s!\t32, r5, r6\n\tjump.ge\t@.BB0_139\n.BB0_72:\n\tsub\t32, r5, r6\n\tadd\tr13, r0, r5\n\tadd\tr12, r0, r7\n.BB0_73:\n\tand!\t1, r6, r8\n\tadd\tr7, r0, r8\n\tadd.eq\t1, r0, r8\n\tmul\tr8, r5, r5, r8\n\tshr.s\t1, r6, r8\n\tmul\tr7, r7, r7, r9\n\tsub.s!\t1, r6, r6\n\tadd\tr8, r0, r6\n\tjump.gt\t@.BB0_73\n\tld.1\tr3, r3\n\tsub\t0, r5, r6\n\tand\tr3, r6, r3\n\tsub.s\t1, r5, r5\n\tld.1\tr4, r6\n\tand\tr6, r5, r5\n\tor\tr5, r3, r3\n\tst.1\tr4, r3\n\tsub.s!\t4, r10, r3\n\tjump.ne\t@.BB0_156\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB0_158\n.BB0_156:\n\tadd\tr2, r1, r1\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\tr10, r0, r2\n\tadd\tr14, r0, stack-[8]\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[8], r0, r14\n\tadd\tstack-[4], r0, r13\n\tadd\tstack-[5], r0, r12\n\tadd\tstack-[6], r0, r11\n\tadd\tstack-[7], r0, r10\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r3\n.BB0_158:\n\tadd\t96, r0, r1\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_103\n\tadd\t63, r3, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r3\n\tld.1\t64, r1\n\tadd\tr1, r3, r3\n\tst.1\t64, r3\n\tadd\tstack[@returndatasize], r0, r3\n\tst.1.inc\tr1, r3, r3\n\tptr.add\tstack[@ptr_return_data], r0, r4\n\tadd\tstack[@returndatasize], r0, r6\n\tshr.s!\t5, r6, r5\n\tjump.eq\t@.BB0_226\n\tadd\tr0, r0, r7\n.BB0_161:\n\tshl.s\t5, r7, r8\n\tadd\tr3, r8, r9\n\tptr.add\tr4, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB0_161\n.BB0_226:\n\tand!\t31, r6, r6\n\tjump.eq\t@.BB0_103\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr3, r5, r3\n\tshl.s\t3, r6, r5\n\tld.1\tr3, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr4, r4\n\tsub\t256, r5, r5\n\tshr\tr4, r5, r4\n\tshl\tr4, r5, r4\n\tor\tr4, r6, r4\n\tst.1\tr3, r4\n.BB0_103:\n\tld.1.inc\tr1, r1, r3\n\tsub.s!\t31, r1, r1\n\tadd\tr0, r0, r1\n\tjump.le\t@.BB0_33\n\tsub!\tr2, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_33\n\tld.1\tr3, r1\n\tsub!\tr1, r0, r1\n\tadd\tr0, r0, r1\n\tjump.eq\t@.BB0_33\n\tadd\t1, r0, r1\n\tadd\t1, r14, r14\n\tadd\tstack-[9], r0, r2\n\tld.1\tr2, r2\n\tsub!\tr14, r2, r2\n\tjump.lt\t@.BB0_119\n.BB0_33:\n\tsub!\tr1, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tld.1\t64, r2\n\tst.1\tr2, r1\n\tld.1\t64, r1\n\tsub\tr2, r1, r2\n\tadd\t32, r2, r2\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tshl.s\t64, r1, r1\n\tshl.s\t96, r2, r2\n\tor\tr2, r1, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_184:\n\tadd\tr2, r1, r1\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\tr10, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[2], r0, r14\n\tadd\tstack-[3], r0, r13\n\tadd\tstack-[4], r0, r12\n\tadd\tstack-[5], r0, r11\n\tadd\tstack-[6], r0, r10\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r3\n.BB0_186:\n\tadd\t96, r0, r1\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_107\n\tadd\t63, r3, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r3\n\tld.1\t64, r1\n\tadd\tr1, r3, r3\n\tst.1\t64, r3\n\tadd\tstack[@returndatasize], r0, r3\n\tst.1.inc\tr1, r3, r3\n\tptr.add\tstack[@ptr_return_data], r0, r4\n\tadd\tstack[@returndatasize], r0, r6\n\tand\t31, r6, r5\n\tshr.s!\t5, r6, r6\n\tjump.eq\t@.BB0_231\n\tadd\tr0, r0, r7\n.BB0_189:\n\tshl.s\t5, r7, r8\n\tadd\tr3, r8, r9\n\tptr.add\tr4, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r6, r8\n\tjump.lt\t@.BB0_189\n.BB0_231:\n\tsub!\tr5, r0, r7\n\tjump.eq\t@.BB0_107\n\tshl.s\t5, r6, r6\n\tptr.add\tr4, r6, r4\n\tadd\tr3, r6, r3\n\tshl.s\t3, r5, r5\n\tld.1\tr3, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr4, r4\n\tsub\t256, r5, r5\n\tshr\tr4, r5, r4\n\tshl\tr4, r5, r4\n\tor\tr4, r6, r4\n\tst.1\tr3, r4\n.BB0_107:\n\tld.1.inc\tr1, r3, r1\n\tsub.s!\t31, r3, r3\n\tjump.le\t@.BB0_56\n\tsub!\tr2, r0, r2\n\tjump.eq\t@.BB0_56\n\tld.1\tr1, r1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_34\n.BB0_56:\n\tld.1\tr11, r1\n\tsub!\tr1, r0, r1\n\tjump.eq\t@.BB0_34\n\tadd\t256, r0, r15\n\tadd\t1, r0, r1\n\tadd\tr1, r0, stack-[7]\n\tadd\tr0, r0, r3\n\tadd\tr15, r0, stack-[1]\n.BB0_126:\n\tadd\tr3, r0, stack-[9]\n\tshl.s\t5, r3, r1\n\tadd\tr1, r0, stack-[8]\n\tadd\tr1, r12, r1\n\tld.1\tr1, r1\n\tand\t@CPI0_8[0], r1, r1\n\tld.1\t64, r2\n\tadd\t36, r2, r3\n\tst.1\tr3, r1\n\tld.1\t64, r4\n\tsub\tr3, r4, r1\n\tst.1.inc\tr4, r1, r3\n\tadd\t68, r2, r1\n\tst.1\t64, r1\n\tld.1\tr3, r1\n\tand\t@CPI0_7[0], r1, r1\n\tor\t@CPI0_6[0], r1, r1\n\tst.1\tr3, r1\n\tld.1\t64, r1\n\tld.1\tr4, r2\n\tsub.s!\t32, r2, r4\n\tadd\tr2, r0, r5\n\tadd\tr1, r0, r4\n\tjump.lt\t@.BB0_81\n\tadd\tr1, r0, r4\n\tadd\tr2, r0, r5\n.BB0_142:\n\tld.1.inc\tr3, r6, r3\n\tst.1.inc\tr4, r6, r4\n\tsub.s\t32, r5, r5\n\tsub.s!\t32, r5, r6\n\tjump.ge\t@.BB0_142\n.BB0_81:\n\tsub\t32, r5, r6\n\tadd\tstack-[7], r0, r5\n\tadd\tr15, r0, r7\n.BB0_82:\n\tand!\t1, r6, r8\n\tadd\tr7, r0, r8\n\tadd.eq\t1, r0, r8\n\tmul\tr8, r5, r5, r8\n\tshr.s\t1, r6, r8\n\tmul\tr7, r7, r7, r9\n\tsub.s!\t1, r6, r6\n\tadd\tr8, r0, r6\n\tjump.gt\t@.BB0_82\n\tld.1\tr3, r3\n\tsub\t0, r5, r6\n\tand\tr3, r6, r3\n\tsub.s\t1, r5, r5\n\tld.1\tr4, r6\n\tand\tr6, r5, r5\n\tor\tr5, r3, r3\n\tst.1\tr4, r3\n\tsub.s!\t4, r10, r3\n\tjump.ne\t@.BB0_177\n\tadd\t1, r0, r2\n\tadd\tstack[@returndatasize], r0, r3\n\tjump\t@.BB0_179\n.BB0_177:\n\tadd\tr2, r1, r1\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tor\t@CPI0_10[0], r1, r1\n\tadd\tr10, r0, r2\n\tnear_call\tr0, @__staticcall, @DEFAULT_UNWIND\n\tadd\tstack-[1], r0, r15\n\tadd\tstack-[2], r0, r14\n\tadd\tstack-[3], r0, r13\n\tadd\tstack-[4], r0, r12\n\tadd\tstack-[5], r0, r11\n\tadd\tstack-[6], r0, r10\n\tand\t1, r2, r2\n\tptr.add\tr1, r0, stack[@ptr_return_data]\n\tshr.s\t96, r1, r1\n\tand\t@CPI0_0[0], r1, stack[@returndatasize]\n\tand\t@CPI0_0[0], r1, r3\n.BB0_179:\n\tadd\t96, r0, r1\n\tsub!\tr3, r0, r4\n\tjump.eq\t@.BB0_106\n\tadd\t63, r3, r1\n\tsub.s\t32, r0, r3\n\tand\tr1, r3, r3\n\tld.1\t64, r1\n\tadd\tr1, r3, r3\n\tst.1\t64, r3\n\tadd\tstack[@returndatasize], r0, r3\n\tst.1.inc\tr1, r3, r3\n\tptr.add\tstack[@ptr_return_data], r0, r4\n\tadd\tstack[@returndatasize], r0, r6\n\tshr.s!\t5, r6, r5\n\tjump.eq\t@.BB0_230\n\tadd\tr0, r0, r7\n.BB0_182:\n\tshl.s\t5, r7, r8\n\tadd\tr3, r8, r9\n\tptr.add\tr4, r8, r8\n\tld\tr8, r8\n\tst.1\tr9, r8\n\tadd\t1, r7, r7\n\tsub!\tr7, r5, r8\n\tjump.lt\t@.BB0_182\n.BB0_230:\n\tand!\t31, r6, r6\n\tjump.eq\t@.BB0_106\n\tshl.s\t5, r5, r5\n\tptr.add\tr4, r5, r4\n\tadd\tr3, r5, r3\n\tshl.s\t3, r6, r5\n\tld.1\tr3, r6\n\tshl\tr6, r5, r6\n\tshr\tr6, r5, r6\n\tld\tr4, r4\n\tsub\t256, r5, r5\n\tshr\tr4, r5, r4\n\tshl\tr4, r5, r4\n\tor\tr4, r6, r4\n\tst.1\tr3, r4\n.BB0_106:\n\tld.1.inc\tr1, r3, r1\n\tsub.s!\t31, r3, r3\n\tjump.le\t@.BB0_52\n\tld.1\tr1, r1\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_53\n.BB0_52:\n\tadd\tr0, r0, r1\n.BB0_53:\n\tld.1\tr14, r2\n\tadd\tstack-[9], r0, r3\n\tsub!\tr3, r2, r2\n\tjump.ge\t@.BB0_3\n\tadd\tstack-[8], r0, r2\n\tadd\tr2, r13, r2\n\tsub!\tr1, r0, r1\n\tadd\t0, r0, r1\n\tadd.ne\t1, r0, r1\n\tst.1\tr2, r1\n\tadd\t1, r3, r3\n\tld.1\tr11, r1\n\tsub!\tr3, r1, r1\n\tjump.lt\t@.BB0_126\n.BB0_34:\n\tld.1\t64, r1\n\tadd\t32, r0, r2\n\tst.1.inc\tr1, r2, r2\n\tld.1\tr14, r3\n\tst.1\tr2, r3\n\tadd\t64, r1, r1\n\tld.1\tr14, r2\n\tshl.s!\t5, r2, r2\n\tjump.eq\t@.BB0_28\n\tadd\tr0, r0, r3\n.BB0_118:\n\tadd\tr3, r1, r4\n\tadd\tr3, r13, r5\n\tld.1\tr5, r5\n\tst.1\tr4, r5\n\tadd\t32, r3, r3\n\tsub!\tr3, r2, r4\n\tjump.lt\t@.BB0_118\n.BB0_28:\n\tadd\tr2, r1, r1\n\tld.1\t64, r2\n\tsub\tr1, r2, r1\n\tadd\t@CPI0_0[0], r0, r3\n\tsub.s!\t@CPI0_0[0], r1, r4\n\tadd.ge\tr3, r0, r1\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr3, r0, r2\n\tshl.s\t64, r2, r2\n\tshl.s\t96, r1, r1\n\tor\tr1, r2, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_3:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.func_end0:\n\n__staticcall:\n.func_begin1:\n.tmp0:\n\tfar_call.static\tr1, r2, @.BB1_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB1_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end1:\n\n\t.data\n\t.p2align\t5\ncalldatasize:\n\t.cell 0\n\n\t.p2align\t5\nreturndatasize:\n\t.cell 0\n\n\t.p2align\t5\nptr_calldata:\n.cell\t0\n\n\t.p2align\t5\nptr_return_data:\n.cell\t0\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_2:\n\t.cell 1268635908\nCPI0_3:\n\t.cell 2011608268\nCPI0_4:\n\t.cell 3281561893\nCPI0_5:\n\t.cell 3641012231\nCPI0_6:\n\t.cell 904250603428552709895185118199468575982109441609966099573332780532423983104\nCPI0_7:\n\t.cell 26959946667150639794667015087019630673637144422540572481103610249215\nCPI0_8:\n\t.cell -26959946667150639794667015087019630673637144422540572481103610249216\nCPI0_9:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_10:\n\t.cell 188313052061600422915073682696229992483070663333921035386880000\nCPI0_11:\n\t.cell 4294967296\nCPI0_12:\n\t.cell 18446744073709551616\n",
            "bytecode": {
              "object": "0004000000000002000900000000000200000000030100190000006003300270000001a10430019700030000004103550002000000010355000001a10030019d000100000000001f0000008001000039000000400010043f00000000010004160000000102200190000000870000c13d000000000101004b000006760000c13d0000000001000031000000040210008c000006760000413d0000000202000367000000000302043b000000e003300270000001a30430009c0000008e0000c13d000000440310008a000000400400008a000000000343004b000006760000813d0000000403200370000000000303043b000001aa0a3001970000002403200370000000000403043b000001ac0340009c000006760000213d0000002403400039000000000513004b000006760000213d0000000404400039000000000242034f000000000202043b000001ac0420009c000006760000213d00000005042002100000000005340019000000000115004b000006760000213d000000400500043d000000200b50003900000000014b0019000000400010043f000900000005001d00000000002504350000001f0240018f00000002033003670000000504400272000000420000613d0000000005000019000000050650021000000000076b0019000000000663034f000000000606043b00000000006704350000000105500039000000000645004b0000003a0000413d000000000502004b000000510000613d0000000504400210000000000343034f00000000044b00190000000302200210000000000504043300000000052501cf000000000525022f000000000303043b0000010002200089000000000323022f00000000022301cf000000000252019f00000000002404350000000000010435000000400100043d0000002402100039000001a7030000410000000000320435000000400400043d000000000242004900000000032404360000004401100039000000400010043f0000000001030433000001a801100197000001a7011001c70000000000130435000000400100043d0000000002040433000000200420008c000000000502001900000000040100190000006c0000413d0000000004010019000000000502001900000000360304340000000004640436000000200550008a000000200650008c000000670000813d00000100070000390000000106000039000000200550008900000001085001900000000008070019000000010800603900000000866800a9000000010850027000000000977700a9000000010550008c00000000050800190000006f0000213d00000000030304330000000005600049000000000353016f000000010560008a0000000006040433000000000556016f000000000335019f00000000003404350000000403a0008c00070000000a001d00060000000b001d0000029b0000c13d00000001020000390000000103000031000002b00000013d000000000101004b000006760000c13d000000200100003900000100001004430000012000000443000001a2010000410000067e0001042e000001a40430009c000001280000c13d000000440310008a000000400400008a000000000343004b000006760000813d0000000403200370000000000303043b000001aa0a3001970000002403200370000000000403043b000001ac0340009c000006760000213d0000002403400039000000000513004b000006760000213d0000000404400039000000000242034f000000000202043b000001ac0420009c000006760000213d00000005042002100000000005340019000000000115004b000006760000213d000000400b00043d000000200cb0003900000000014c0019000000400010043f00000000002b04350000001f0240018f00000002033003670000000504400272000000b90000613d0000000005000019000000050650021000000000076c0019000000000663034f000000000606043b00000000006704350000000105500039000000000645004b000000b10000413d000000000502004b000000c80000613d0000000504400210000000000343034f00000000044c00190000000302200210000000000504043300000000052501cf000000000525022f000000000303043b0000010002200089000000000323022f00000000022301cf000000000252019f0000000000240435000000000001043500000000020b0433000001ad0120009c000006760000813d000000400e00043d000000000d2e0436000000050320021000000000013d0019000000400010043f000000000202004b000000f10000613d0000001f0130018f000000000200003100000002022003670000000503300272000000e10000613d0000000004000019000000050540021000000000065d0019000000000552034f000000000505043b00000000005604350000000104400039000000000534004b000000d90000413d000000000401004b000000f00000613d0000000503300210000000000232034f00000000033d00190000000301100210000000000403043300000000041401cf000000000414022f000000000202043b0000010001100089000000000212022f00000000011201cf000000000141019f0000000000130435000000400100043d0000002402100039000001a7030000410000000000320435000000400400043d000000000242004900000000032404360000004401100039000000400010043f0000000001030433000001a801100197000001a7011001c70000000000130435000000400100043d0000000002040433000000200420008c000000000502001900000000040100190000010a0000413d0000000004010019000000000502001900000000360304340000000004640436000000200550008a000000200650008c000001050000813d00000100070000390000000106000039000000200550008900000001085001900000000008070019000000010800603900000000866800a9000000010850027000000000977700a9000000010550008c00000000050800190000010d0000213d00000000030304330000000005600049000000000353016f000000010560008a0000000006040433000000000556016f000000000335019f00000000003404350000000403a0008c00060000000a001d00050000000b001d00040000000c001d00030000000d001d00020000000e001d000004190000c13d00000001020000390000000103000031000004310000013d000001a50430009c000001640000c13d000000240110008a000000200a00008a0000000001a1004b000006760000813d0000000401200370000000000101043b000000400200043d0000002403200039000001a7040000410000000000430435000000400400043d000000000343004900000000033404360000004402200039000000400020043f0000000002030433000001a802200197000001a7022001c70000000000230435000001aa0b100197000000400100043d0000000002040433000000200420008c000000000502001900000000040100190000014b0000413d0000000004010019000000000502001900000000360304340000000004640436000000200550008a000000200650008c000001460000813d00000100070000390000000106000039000000200550008900000001085001900000000008070019000000010800603900000000866800a9000000010850027000000000977700a9000000010550008c00000000050800190000014e0000213d00000000030304330000000005600049000000000353016f000000010560008a0000000006040433000000000556016f000000000335019f00000000003404350000000403b0008c000001a40000c13d00000001020000390000000103000031000001bb0000013d000001a60330009c000006760000c13d000000440110008a000000400300008a000000000131004b000006760000813d0000000401200370000000000101043b0000002402200370000000000202043b000000400400043d0000002403400039000001a7050000410000000000530435000000400500043d000000000353004900000000033504360000004404400039000000400040043f0000000004030433000001a804400197000001a7044001c70000000000430435000001a902200197000800000002001d000001aa0a100197000000400100043d0000000002050433000000200420008c000000000502001900000000040100190000018b0000413d0000000004010019000000000502001900000000360304340000000004640436000000200550008a000000200650008c000001860000813d00000100070000390000000106000039000000200550008900000001085001900000000008070019000000010800603900000000866800a9000000010850027000000000977700a9000000010550008c00000000050800190000018e0000213d00000000030304330000000005600049000000000353016f000000010560008a0000000006040433000000000556016f000000000335019f00000000003404350000000403a0008c000002200000c13d00000001020000390000000103000031000002350000013d0000000001120019000000400200043d0000000001210049000001a103000041000001a10410009c0000000001038019000001a10420009c000000000203801900000040022002100000006001100210000000000121019f000001ab011001c700000000020b001900090000000a001d00080000000b001d067d06780000040f000000080b000029000000090a000029000000010220018f00030000000103550000006001100270000101a10010019d000001a1031001970000006001000039000000000403004b000001e20000613d0000003f013000390000000003a1016f000000400100043d0000000003310019000000400030043f00000001030000310000000003310436000000030400036700000001060000310000001f0560018f0000000506600272000001d30000613d000000000700001900000005087002100000000009830019000000000884034f000000000808043b00000000008904350000000107700039000000000867004b000001cb0000413d000000000705004b000001e20000613d0000000506600210000000000464034f00000000036300190000000305500210000000000603043300000000065601cf000000000656022f000000000404043b0000010005500089000000000454022f00000000045401cf000000000464019f000000000043043500000000310104340000001f0110008c00000000010000190000056b0000a13d000000000102004b00000000010000190000056b0000613d0000000001030433000000000101004b00000000010000190000056b0000613d000000400100043d0000002402100039000001a9030000410000000000320435000000400400043d000000000242004900000000032404360000004401100039000000400010043f0000000001030433000001a801100197000001a7011001c70000000000130435000000400100043d0000000002040433000000200420008c00000000050200190000000004010019000002070000413d0000000004010019000000000502001900000000360304340000000004640436000000200550008a000000200650008c000002020000813d00000100070000390000000106000039000000200550008900000001085001900000000008070019000000010800603900000000866800a9000000010850027000000000977700a9000000010550008c00000000050800190000020a0000213d00000000030304330000000005600049000000000353016f000000010560008a0000000006040433000000000556016f000000000335019f00000000003404350000000403b0008c000003160000c13d000000010200003900000001030000310000032b0000013d0000000001120019000000400200043d0000000001210049000001a103000041000001a10410009c0000000001038019000001a10420009c000000000203801900000040022002100000006001100210000000000121019f000001ab011001c700000000020a001900090000000a001d067d06780000040f000000090a000029000000010220018f00030000000103550000006001100270000101a10010019d000001a1031001970000006001000039000000000403004b0000025d0000613d0000003f01300039000000200300008a000000000331016f000000400100043d0000000003310019000000400030043f00000001030000310000000003310436000000030400036700000001060000310000001f0560018f00000005066002720000024e0000613d000000000700001900000005087002100000000009830019000000000884034f000000000808043b00000000008904350000000107700039000000000867004b000002460000413d000000000705004b0000025d0000613d0000000506600210000000000464034f00000000036300190000000305500210000000000603043300000000065601cf000000000656022f000000000404043b0000010005500089000000000454022f00000000045401cf000000000464019f000000000043043500000000310104340000001f0110008c00000000010000190000056b0000a13d000000000102004b00000000010000190000056b0000613d0000000001030433000000000101004b00000000010000190000056b0000613d000000400100043d0000002402100039000001a9030000410000000000320435000000400400043d000000000242004900000000032404360000004401100039000000400010043f0000000001030433000001a801100197000001a7011001c70000000000130435000000400100043d0000000002040433000000200420008c00000000050200190000000004010019000002820000413d0000000004010019000000000502001900000000360304340000000004640436000000200550008a000000200650008c0000027d0000813d00000100070000390000000106000039000000200550008900000001085001900000000008070019000000010800603900000000866800a9000000010850027000000000977700a9000000010550008c0000000005080019000002850000213d00000000030304330000000005600049000000000353016f000000010560008a0000000006040433000000000556016f000000000335019f00000000003404350000000403a0008c0000035d0000c13d00000001020000390000000103000031000003720000013d0000000001120019000000400200043d0000000001210049000001a103000041000001a10410009c0000000001038019000001a10420009c000000000203801900000040022002100000006001100210000000000121019f000001ab011001c700000000020a0019067d06780000040f000000060b000029000000070a000029000000010220018f00030000000103550000006001100270000101a10010019d000001a1031001970000006001000039000000000403004b000002d80000613d0000003f01300039000000200300008a000000000331016f000000400100043d0000000003310019000000400030043f00000001030000310000000003310436000000030400036700000001060000310000001f0560018f0000000506600272000002c90000613d000000000700001900000005087002100000000009830019000000000884034f000000000808043b00000000008904350000000107700039000000000867004b000002c10000413d000000000705004b000002d80000613d0000000506600210000000000464034f00000000036300190000000305500210000000000603043300000000065601cf000000000656022f000000000404043b0000010005500089000000000454022f00000000045401cf000000000464019f000000000043043500000000310104340000001f0110008c00000000010000190000056b0000a13d000000000102004b00000000010000190000056b0000613d0000000001030433000000000101004b00000000010000190000056b0000613d000000400100043d0000002402100039000001a9030000410000000000320435000000400400043d000000000242004900000000032404360000004401100039000000400010043f0000000001030433000001a801100197000001a7011001c70000000000130435000000400100043d0000000002040433000000200420008c00000000050200190000000004010019000002fd0000413d0000000004010019000000000502001900000000360304340000000004640436000000200550008a000000200650008c000002f80000813d00000100070000390000000106000039000000200550008900000001085001900000000008070019000000010800603900000000866800a9000000010850027000000000977700a9000000010550008c0000000005080019000003000000213d00000000030304330000000005600049000000000353016f000000010560008a0000000006040433000000000556016f000000000335019f00000000003404350000000403a0008c000004940000c13d00000001020000390000000103000031000004a90000013d0000000001120019000000400200043d0000000001210049000001a103000041000001a10410009c0000000001038019000001a10420009c000000000203801900000040022002100000006001100210000000000121019f000001ab011001c700000000020b001900090000000a001d067d06780000040f000000090a000029000000010220018f00030000000103550000006001100270000101a10010019d000001a1031001970000006001000039000000000403004b000003520000613d0000003f013000390000000003a1016f000000400100043d0000000003310019000000400030043f00000001030000310000000003310436000000030400036700000001060000310000001f0560018f0000000506600272000003430000613d000000000700001900000005087002100000000009830019000000000884034f000000000808043b00000000008904350000000107700039000000000867004b0000033b0000413d000000000705004b000003520000613d0000000506600210000000000464034f00000000036300190000000305500210000000000603043300000000065601cf000000000656022f000000000404043b0000010005500089000000000454022f00000000045401cf000000000464019f000000000043043500000000130104340000001f0330008c000003580000a13d0000000001010433000000000202004b000003590000c13d0000000001000019000000000101004b000000000100001900000001010060390000056b0000013d0000000001120019000000400200043d0000000001210049000001a103000041000001a10410009c0000000001038019000001a10420009c000000000203801900000040022002100000006001100210000000000121019f000001ab011001c700000000020a001900090000000a001d067d06780000040f000000090a000029000000010220018f00030000000103550000006001100270000101a10010019d000001a1031001970000006001000039000000000403004b0000039a0000613d0000003f01300039000000200300008a000000000331016f000000400100043d0000000003310019000000400030043f00000001030000310000000003310436000000030400036700000001060000310000001f0560018f00000005066002720000038b0000613d000000000700001900000005087002100000000009830019000000000884034f000000000808043b00000000008904350000000107700039000000000867004b000003830000413d000000000705004b0000039a0000613d0000000506600210000000000464034f00000000036300190000000305500210000000000603043300000000065601cf000000000656022f000000000404043b0000010005500089000000000454022f00000000045401cf000000000464019f000000000043043500000000130104340000001f0330008c000003a30000a13d000000000202004b000003a30000613d0000000001010433000000000101004b00000000010000190000056b0000c13d000000400100043d000000240210003900000008030000290000000000320435000000400400043d000000000242004900000000032404360000004401100039000000400010043f0000000001030433000001a801100197000001a7011001c70000000000130435000000400100043d0000000002040433000000200420008c00000000050200190000000004010019000003bd0000413d0000000004010019000000000502001900000000360304340000000004640436000000200550008a000000200650008c000003b80000813d00000100070000390000000106000039000000200550008900000001085001900000000008070019000000010800603900000000866800a9000000010850027000000000977700a9000000010550008c0000000005080019000003c00000213d00000000030304330000000005600049000000000353016f000000010560008a0000000006040433000000000556016f000000000335019f00000000003404350000000403a0008c000003d60000c13d00000001020000390000000103000031000003e90000013d0000000001120019000000400200043d0000000001210049000001a103000041000001a10410009c0000000001038019000001a10420009c000000000203801900000040022002100000006001100210000000000121019f000001ab011001c700000000020a0019067d06780000040f000000010220018f00030000000103550000006001100270000101a10010019d000001a1031001970000006001000039000000000403004b000004110000613d0000003f01300039000000200300008a000000000331016f000000400100043d0000000003310019000000400030043f00000001030000310000000003310436000000030400036700000001060000310000001f0560018f0000000506600272000004020000613d000000000700001900000005087002100000000009830019000000000884034f000000000808043b00000000008904350000000107700039000000000867004b000003fa0000413d000000000705004b000004110000613d0000000506600210000000000464034f00000000036300190000000305500210000000000603043300000000065601cf000000000656022f000000000404043b0000010005500089000000000454022f00000000045401cf000000000464019f000000000043043500000000130104340000001f0330008c000004170000a13d0000000001010433000000000202004b0000056b0000c13d00000000010000190000056b0000013d0000000001120019000000400200043d0000000001210049000001a103000041000001a10410009c0000000001038019000001a10420009c000000000203801900000040022002100000006001100210000000000121019f000001ab011001c700000000020a0019067d06780000040f000000020e000029000000030d000029000000040c000029000000050b000029000000060a000029000000010220018f00030000000103550000006001100270000101a10010019d000001a1031001970000006001000039000000000403004b000004590000613d0000003f01300039000000200300008a000000000331016f000000400100043d0000000003310019000000400030043f00000001030000310000000003310436000000030400036700000001060000310000001f0560018f00000005066002720000044a0000613d000000000700001900000005087002100000000009830019000000000884034f000000000808043b00000000008904350000000107700039000000000867004b000004420000413d000000000705004b000004590000613d0000000506600210000000000464034f00000000036300190000000305500210000000000603043300000000065601cf000000000656022f000000000404043b0000010005500089000000000454022f00000000045401cf000000000464019f000000000043043500000000130104340000001f0330008c000006590000a13d000000000202004b000006590000613d0000000001010433000000000101004b000006590000613d000000400100043d0000002402100039000001a9030000410000000000320435000000400400043d000000000242004900000000032404360000004401100039000000400010043f0000000001030433000001a801100197000001a7011001c70000000000130435000000400100043d0000000002040433000000200420008c000000000502001900000000040100190000047b0000413d0000000004010019000000000502001900000000360304340000000004640436000000200550008a000000200650008c000004760000813d00000100070000390000000106000039000000200550008900000001085001900000000008070019000000010800603900000000866800a9000000010850027000000000977700a9000000010550008c00000000050800190000047e0000213d00000000030304330000000005600049000000000353016f000000010560008a0000000006040433000000000556016f000000000335019f00000000003404350000000403a0008c0000057c0000c13d00000001020000390000000103000031000005940000013d0000000001120019000000400200043d0000000001210049000001a103000041000001a10410009c0000000001038019000001a10420009c000000000203801900000040022002100000006001100210000000000121019f000001ab011001c700000000020a0019067d06780000040f000000060b000029000000070a000029000000010220018f00030000000103550000006001100270000101a10010019d000001a1031001970000006001000039000000000403004b000004d10000613d0000003f01300039000000200300008a000000000331016f000000400100043d0000000003310019000000400030043f00000001030000310000000003310436000000030400036700000001060000310000001f0560018f0000000506600272000004c20000613d000000000700001900000005087002100000000009830019000000000884034f000000000808043b00000000008904350000000107700039000000000867004b000004ba0000413d000000000705004b000004d10000613d0000000506600210000000000464034f00000000036300190000000305500210000000000603043300000000065601cf000000000656022f000000000404043b0000010005500089000000000454022f00000000045401cf000000000464019f000000000043043500000000130104340000001f0330008c000004da0000a13d000000000202004b000004da0000613d0000000001010433000000000101004b00000000010000190000056b0000c13d000000010100003900000009020000290000000002020433000000000202004b0000056b0000613d000001000c000039000000010d000039000000000e00001900050000000c001d00040000000d001d0000000501e002100000000001b100190000000001010433000001a901100197000000400200043d00000024032000390000000000130435000000400400043d000000000143004900000000031404360000004401200039000000400010043f0000000001030433000001a801100197000001a7011001c70000000000130435000000400100043d0000000002040433000000200420008c00000000050200190000000004010019000005010000413d0000000004010019000000000502001900000000360304340000000004640436000000200550008a000000200650008c000004fc0000813d000000200650008900000000050d001900000000070c001900000001086001900000000008070019000000010800603900000000855800a9000000010860027000000000977700a9000000010660008c0000000006080019000005040000213d00000000030304330000000006500049000000000363016f000000010550008a0000000006040433000000000556016f000000000335019f00000000003404350000000403a0008c0000051a0000c13d00000001020000390000000103000031000005330000013d0000000001120019000000400200043d0000000001210049000001a103000041000001a10410009c0000000001038019000001a10420009c000000000203801900000040022002100000006001100210000000000121019f000001ab011001c700000000020a001900080000000e001d067d06780000040f000000080e000029000000040d000029000000050c000029000000060b000029000000070a000029000000010220018f00030000000103550000006001100270000101a10010019d000001a1031001970000006001000039000000000403004b0000055a0000613d0000003f01300039000000200300008a000000000331016f000000400100043d0000000003310019000000400030043f000000010300003100000000033104360000000304000367000000010600003100000005056002720000054b0000613d000000000700001900000005087002100000000009830019000000000884034f000000000808043b00000000008904350000000107700039000000000857004b000005430000413d0000001f066001900000055a0000613d0000000505500210000000000454034f00000000035300190000000305600210000000000603043300000000065601cf000000000656022f000000000404043b0000010005500089000000000454022f00000000045401cf000000000464019f000000000043043500000000310104340000001f0110008c00000000010000190000056b0000a13d000000000102004b00000000010000190000056b0000613d0000000001030433000000000101004b00000000010000190000056b0000613d0000000101000039000000010ee000390000000902000029000000000202043300000000022e004b000004e40000413d000000000101004b0000000001000019000000010100c039000000400200043d0000000000120435000000400100043d00000000021200490000002002200039000001a103000041000001a10420009c0000000002038019000001a10410009c000000000103801900000040011002100000006002200210000000000112019f0000067e0001042e0000000001120019000000400200043d0000000001210049000001a103000041000001a10410009c0000000001038019000001a10420009c000000000203801900000040022002100000006001100210000000000121019f000001ab011001c700000000020a0019067d06780000040f000000020e000029000000030d000029000000040c000029000000050b000029000000060a000029000000010220018f00030000000103550000006001100270000101a10010019d000001a1031001970000006001000039000000000403004b000005bc0000613d0000003f01300039000000200300008a000000000331016f000000400100043d0000000003310019000000400030043f00000001030000310000000003310436000000030400036700000001060000310000001f0560018f0000000506600272000005ad0000613d000000000700001900000005087002100000000009830019000000000884034f000000000808043b00000000008904350000000107700039000000000867004b000005a50000413d000000000705004b000005bc0000613d0000000506600210000000000464034f00000000036300190000000305500210000000000603043300000000065601cf000000000656022f000000000404043b0000010005500089000000000454022f00000000045401cf000000000464019f000000000043043500000000130104340000001f0330008c000005c40000a13d000000000202004b000005c40000613d0000000001010433000000000101004b000006590000c13d00000000010b0433000000000101004b000006590000613d000001000f0000390000000101000039000700000001001d000000000300001900010000000f001d000900000003001d0000000501300210000800000001001d0000000001c100190000000001010433000001a901100197000000400200043d00000024032000390000000000130435000000400400043d000000000143004900000000031404360000004401200039000000400010043f0000000001030433000001a801100197000001a7011001c70000000000130435000000400100043d0000000002040433000000200420008c00000000050200190000000004010019000005eb0000413d0000000004010019000000000502001900000000360304340000000004640436000000200550008a000000200650008c000005e60000813d0000002006500089000000070500002900000000070f001900000001086001900000000008070019000000010800603900000000855800a9000000010860027000000000977700a9000000010660008c0000000006080019000005ee0000213d00000000030304330000000006500049000000000363016f000000010550008a0000000006040433000000000556016f000000000335019f00000000003404350000000403a0008c000006040000c13d000000010200003900000001030000310000061d0000013d0000000001120019000000400200043d0000000001210049000001a103000041000001a10410009c0000000001038019000001a10420009c000000000203801900000040022002100000006001100210000000000121019f000001ab011001c700000000020a0019067d06780000040f000000010f000029000000020e000029000000030d000029000000040c000029000000050b000029000000060a000029000000010220018f00030000000103550000006001100270000101a10010019d000001a1031001970000006001000039000000000403004b000006440000613d0000003f01300039000000200300008a000000000331016f000000400100043d0000000003310019000000400030043f00000001030000310000000003310436000000030400036700000001060000310000000505600272000006350000613d000000000700001900000005087002100000000009830019000000000884034f000000000808043b00000000008904350000000107700039000000000857004b0000062d0000413d0000001f06600190000006440000613d0000000505500210000000000454034f00000000035300190000000305600210000000000603043300000000065601cf000000000656022f000000000404043b0000010005500089000000000454022f00000000045401cf000000000464019f000000000043043500000000130104340000001f0330008c0000064a0000a13d0000000001010433000000000202004b0000064b0000c13d000000000100001900000000020e04330000000903000029000000000223004b000006760000813d00000008020000290000000002d20019000000000101004b0000000001000019000000010100c0390000000000120435000000010330003900000000010b0433000000000113004b000005cc0000413d000000400100043d0000002002000039000000000221043600000000030e04330000000000320435000000400110003900000000020e043300000005022002120000066a0000613d000000000300001900000000041300190000000005d30019000000000505043300000000005404350000002003300039000000000423004b000006630000413d0000000001120019000000400200043d0000000001210049000001a103000041000001a10410009c0000000001038019000001a10420009c000000000203801900000040022002100000006001100210000000000121019f0000067e0001042e00000000010000190000067f000104300000067b002104230000000102000039000000000001042d0000000002000019000000000001042d0000067d000004320000067e0001042e0000067f00010430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff0000000200000000000000000000000000000040000001000000000000000000000000000000000000000000000000000000000000000000000000004b9dd9040000000000000000000000000000000000000000000000000000000077e6b4cc00000000000000000000000000000000000000000000000000000000c398a92500000000000000000000000000000000000000000000000000000000d905700701ffc9a70000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffff0000000000007530000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000100000000000000004974bbbb46726b5035ad3f313bf8e7dbd52955d8d251bcfa496e67b72c8dec23"
            },
            "methodIdentifiers": {
              "getSupportedInterfaces(address,bytes4[])": "77e6b4cc",
              "supportsAllInterfaces(address,bytes4[])": "4b9dd904",
              "supportsERC165(address)": "c398a925",
              "supportsInterface(address,bytes4)": "d9057007"
            }
          },
          "hash": "010001af52237940320918d416cc40298d78c3d32b7411b18d8c95b77c178dc6",
          "factoryDependencies": {}
        }
      }
    },
    "sources": {
      "contracts/introspection/ERC165Checker.sol": {
        "id": 0,
        "ast": {
          "absolutePath": "contracts/introspection/ERC165Checker.sol",
          "exportedSymbols": {
            "ERC165Checker": [
              227
            ]
          },
          "id": 228,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 2,
                "nodeType": "StructuredDocumentation",
                "src": "58:277:0",
                "text": " @dev Library used to query support of an interface declared via {IERC165}.\n Note that these functions return the actual result of the query: they do not\n `revert` if an interface is not supported. It is up to the caller to decide\n what to do in these cases."
              },
              "fullyImplemented": true,
              "id": 227,
              "linearizedBaseContracts": [
                227
              ],
              "name": "ERC165Checker",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 5,
                  "mutability": "constant",
                  "name": "_INTERFACE_ID_INVALID",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "438:58:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 3,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "438:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": {
                    "hexValue": "30786666666666666666",
                    "id": 4,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "486:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_4294967295_by_1",
                      "typeString": "int_const 4294967295"
                    },
                    "value": "0xffffffff"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 8,
                  "mutability": "constant",
                  "name": "_INTERFACE_ID_ERC165",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "586:57:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "586:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "value": {
                    "hexValue": "30783031666663396137",
                    "id": 7,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "633:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_33540519_by_1",
                      "typeString": "int_const 33540519"
                    },
                    "value": "0x01ffc9a7"
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 27,
                    "nodeType": "Block",
                    "src": "808:324:0",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 25,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 17,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11,
                                "src": "1022:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 18,
                                "name": "_INTERFACE_ID_ERC165",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8,
                                "src": "1031:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              ],
                              "id": 16,
                              "name": "_supportsERC165Interface",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 175,
                              "src": "997:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
                                "typeString": "function (address,bytes4) view returns (bool)"
                              }
                            },
                            "id": 19,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "997:55:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 24,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "!",
                            "prefix": true,
                            "src": "1068:57:0",
                            "subExpression": {
                              "arguments": [
                                {
                                  "id": 21,
                                  "name": "account",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11,
                                  "src": "1094:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 22,
                                  "name": "_INTERFACE_ID_INVALID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5,
                                  "src": "1103:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  }
                                ],
                                "id": 20,
                                "name": "_supportsERC165Interface",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 175,
                                "src": "1069:24:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
                                  "typeString": "function (address,bytes4) view returns (bool)"
                                }
                              },
                              "id": 23,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1069:56:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "997:128:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 15,
                        "id": 26,
                        "nodeType": "Return",
                        "src": "990:135:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 9,
                    "nodeType": "StructuredDocumentation",
                    "src": "650:83:0",
                    "text": " @dev Returns true if `account` supports the {IERC165} interface,"
                  },
                  "id": 28,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsERC165",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 11,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 28,
                        "src": "762:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "762:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "761:17:0"
                  },
                  "returnParameters": {
                    "id": 15,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 14,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 28,
                        "src": "802:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 13,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "802:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "801:6:0"
                  },
                  "scope": 227,
                  "src": "738:394:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 47,
                    "nodeType": "Block",
                    "src": "1443:193:0",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 45,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 39,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31,
                                "src": "1559:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 38,
                              "name": "supportsERC165",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28,
                              "src": "1544:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 40,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1544:23:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 42,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31,
                                "src": "1608:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 43,
                                "name": "interfaceId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 33,
                                "src": "1617:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              ],
                              "id": 41,
                              "name": "_supportsERC165Interface",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 175,
                              "src": "1583:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
                                "typeString": "function (address,bytes4) view returns (bool)"
                              }
                            },
                            "id": 44,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1583:46:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1544:85:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 37,
                        "id": 46,
                        "nodeType": "Return",
                        "src": "1537:92:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 29,
                    "nodeType": "StructuredDocumentation",
                    "src": "1138:207:0",
                    "text": " @dev Returns true if `account` supports the interface defined by\n `interfaceId`. Support for {IERC165} itself is queried automatically.\n See {IERC165-supportsInterface}."
                  },
                  "id": 48,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 34,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 31,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 48,
                        "src": "1377:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 30,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1377:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 33,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nodeType": "VariableDeclaration",
                        "scope": 48,
                        "src": "1394:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 32,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "1394:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1376:37:0"
                  },
                  "returnParameters": {
                    "id": 37,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 36,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 48,
                        "src": "1437:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 35,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1437:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1436:6:0"
                  },
                  "scope": 227,
                  "src": "1350:286:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 103,
                    "nodeType": "Block",
                    "src": "2138:552:0",
                    "statements": [
                      {
                        "assignments": [
                          64
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 64,
                            "mutability": "mutable",
                            "name": "interfaceIdsSupported",
                            "nodeType": "VariableDeclaration",
                            "scope": 103,
                            "src": "2247:35:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                              "typeString": "bool[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 62,
                                "name": "bool",
                                "nodeType": "ElementaryTypeName",
                                "src": "2247:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 63,
                              "nodeType": "ArrayTypeName",
                              "src": "2247:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                                "typeString": "bool[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 71,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 68,
                                "name": "interfaceIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54,
                                "src": "2296:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                                  "typeString": "bytes4[] memory"
                                }
                              },
                              "id": 69,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "2296:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 67,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "2285:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (bool[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 65,
                                "name": "bool",
                                "nodeType": "ElementaryTypeName",
                                "src": "2289:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 66,
                              "nodeType": "ArrayTypeName",
                              "src": "2289:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                                "typeString": "bool[]"
                              }
                            }
                          },
                          "id": 70,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2285:31:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                            "typeString": "bool[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2247:69:0"
                      },
                      {
                        "condition": {
                          "arguments": [
                            {
                              "id": 73,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51,
                              "src": "2388:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 72,
                            "name": "supportsERC165",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28,
                            "src": "2373:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 74,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2373:23:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 100,
                        "nodeType": "IfStatement",
                        "src": "2369:276:0",
                        "trueBody": {
                          "id": 99,
                          "nodeType": "Block",
                          "src": "2398:247:0",
                          "statements": [
                            {
                              "body": {
                                "id": 97,
                                "nodeType": "Block",
                                "src": "2525:110:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 95,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 86,
                                          "name": "interfaceIdsSupported",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 64,
                                          "src": "2543:21:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                                            "typeString": "bool[] memory"
                                          }
                                        },
                                        "id": 88,
                                        "indexExpression": {
                                          "id": 87,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 76,
                                          "src": "2565:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "2543:24:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "arguments": [
                                          {
                                            "id": 90,
                                            "name": "account",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 51,
                                            "src": "2595:7:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "baseExpression": {
                                              "id": 91,
                                              "name": "interfaceIds",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 54,
                                              "src": "2604:12:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                                                "typeString": "bytes4[] memory"
                                              }
                                            },
                                            "id": 93,
                                            "indexExpression": {
                                              "id": 92,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 76,
                                              "src": "2617:1:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "2604:15:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            },
                                            {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            }
                                          ],
                                          "id": 89,
                                          "name": "_supportsERC165Interface",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 175,
                                          "src": "2570:24:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
                                            "typeString": "function (address,bytes4) view returns (bool)"
                                          }
                                        },
                                        "id": 94,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2570:50:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "src": "2543:77:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 96,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2543:77:0"
                                  }
                                ]
                              },
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 82,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 79,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 76,
                                  "src": "2495:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "expression": {
                                    "id": 80,
                                    "name": "interfaceIds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 54,
                                    "src": "2499:12:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                                      "typeString": "bytes4[] memory"
                                    }
                                  },
                                  "id": 81,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "2499:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2495:23:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 98,
                              "initializationExpression": {
                                "assignments": [
                                  76
                                ],
                                "declarations": [
                                  {
                                    "constant": false,
                                    "id": 76,
                                    "mutability": "mutable",
                                    "name": "i",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 98,
                                    "src": "2480:9:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "typeName": {
                                      "id": 75,
                                      "name": "uint256",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2480:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "visibility": "internal"
                                  }
                                ],
                                "id": 78,
                                "initialValue": {
                                  "hexValue": "30",
                                  "id": 77,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2492:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "nodeType": "VariableDeclarationStatement",
                                "src": "2480:13:0"
                              },
                              "loopExpression": {
                                "expression": {
                                  "id": 84,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "UnaryOperation",
                                  "operator": "++",
                                  "prefix": false,
                                  "src": "2520:3:0",
                                  "subExpression": {
                                    "id": 83,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 76,
                                    "src": "2520:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 85,
                                "nodeType": "ExpressionStatement",
                                "src": "2520:3:0"
                              },
                              "nodeType": "ForStatement",
                              "src": "2475:160:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 101,
                          "name": "interfaceIdsSupported",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 64,
                          "src": "2662:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                            "typeString": "bool[] memory"
                          }
                        },
                        "functionReturnParameters": 59,
                        "id": 102,
                        "nodeType": "Return",
                        "src": "2655:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 49,
                    "nodeType": "StructuredDocumentation",
                    "src": "1642:374:0",
                    "text": " @dev Returns a boolean array where each value corresponds to the\n interfaces passed in and whether they're supported or not. This allows\n you to batch check interfaces for a contract where your expectation\n is that some interfaces may not be supported.\n See {IERC165-supportsInterface}.\n _Available since v3.4._"
                  },
                  "id": 104,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSupportedInterfaces",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 55,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 51,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 104,
                        "src": "2053:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 50,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2053:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 54,
                        "mutability": "mutable",
                        "name": "interfaceIds",
                        "nodeType": "VariableDeclaration",
                        "scope": 104,
                        "src": "2070:28:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 52,
                            "name": "bytes4",
                            "nodeType": "ElementaryTypeName",
                            "src": "2070:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "id": 53,
                          "nodeType": "ArrayTypeName",
                          "src": "2070:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                            "typeString": "bytes4[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2052:47:0"
                  },
                  "returnParameters": {
                    "id": 59,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 58,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 104,
                        "src": "2123:13:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                          "typeString": "bool[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 56,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "2123:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 57,
                          "nodeType": "ArrayTypeName",
                          "src": "2123:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                            "typeString": "bool[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2122:15:0"
                  },
                  "scope": 227,
                  "src": "2021:669:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 149,
                    "nodeType": "Block",
                    "src": "3132:429:0",
                    "statements": [
                      {
                        "condition": {
                          "id": 118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "3188:24:0",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 116,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 107,
                                "src": "3204:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 115,
                              "name": "supportsERC165",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 28,
                              "src": "3189:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3189:23:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 122,
                        "nodeType": "IfStatement",
                        "src": "3184:67:0",
                        "trueBody": {
                          "id": 121,
                          "nodeType": "Block",
                          "src": "3214:37:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 119,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3235:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 114,
                              "id": 120,
                              "nodeType": "Return",
                              "src": "3228:12:0"
                            }
                          ]
                        }
                      },
                      {
                        "body": {
                          "id": 145,
                          "nodeType": "Block",
                          "src": "3371:126:0",
                          "statements": [
                            {
                              "condition": {
                                "id": 140,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "3389:51:0",
                                "subExpression": {
                                  "arguments": [
                                    {
                                      "id": 135,
                                      "name": "account",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 107,
                                      "src": "3415:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "baseExpression": {
                                        "id": 136,
                                        "name": "interfaceIds",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 110,
                                        "src": "3424:12:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                                          "typeString": "bytes4[] memory"
                                        }
                                      },
                                      "id": 138,
                                      "indexExpression": {
                                        "id": 137,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 124,
                                        "src": "3437:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3424:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    ],
                                    "id": 134,
                                    "name": "_supportsERC165Interface",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 175,
                                    "src": "3390:24:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
                                      "typeString": "function (address,bytes4) view returns (bool)"
                                    }
                                  },
                                  "id": 139,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3390:50:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 144,
                              "nodeType": "IfStatement",
                              "src": "3385:102:0",
                              "trueBody": {
                                "id": 143,
                                "nodeType": "Block",
                                "src": "3442:45:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "hexValue": "66616c7365",
                                      "id": 141,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "bool",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3467:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      "value": "false"
                                    },
                                    "functionReturnParameters": 114,
                                    "id": 142,
                                    "nodeType": "Return",
                                    "src": "3460:12:0"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 127,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 124,
                            "src": "3341:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 128,
                              "name": "interfaceIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 110,
                              "src": "3345:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                                "typeString": "bytes4[] memory"
                              }
                            },
                            "id": 129,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "3345:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3341:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 146,
                        "initializationExpression": {
                          "assignments": [
                            124
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 124,
                              "mutability": "mutable",
                              "name": "i",
                              "nodeType": "VariableDeclaration",
                              "scope": 146,
                              "src": "3326:9:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 123,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3326:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 126,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3338:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "3326:13:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 132,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "3366:3:0",
                            "subExpression": {
                              "id": 131,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 124,
                              "src": "3366:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 133,
                          "nodeType": "ExpressionStatement",
                          "src": "3366:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "3321:176:0"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3550:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 114,
                        "id": 148,
                        "nodeType": "Return",
                        "src": "3543:11:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 105,
                    "nodeType": "StructuredDocumentation",
                    "src": "2696:324:0",
                    "text": " @dev Returns true if `account` supports all the interfaces defined in\n `interfaceIds`. Support for {IERC165} itself is queried automatically.\n Batch-querying can lead to gas savings by skipping repeated checks for\n {IERC165} support.\n See {IERC165-supportsInterface}."
                  },
                  "id": 150,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsAllInterfaces",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 111,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 107,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 150,
                        "src": "3056:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 106,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3056:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 110,
                        "mutability": "mutable",
                        "name": "interfaceIds",
                        "nodeType": "VariableDeclaration",
                        "scope": 150,
                        "src": "3073:28:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 108,
                            "name": "bytes4",
                            "nodeType": "ElementaryTypeName",
                            "src": "3073:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "id": 109,
                          "nodeType": "ArrayTypeName",
                          "src": "3073:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                            "typeString": "bytes4[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3055:47:0"
                  },
                  "returnParameters": {
                    "id": 114,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 113,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 150,
                        "src": "3126:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 112,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3126:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3125:6:0"
                  },
                  "scope": 227,
                  "src": "3025:536:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 174,
                    "nodeType": "Block",
                    "src": "4323:296:0",
                    "statements": [
                      {
                        "assignments": [
                          161,
                          163
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 161,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "scope": 174,
                            "src": "4496:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 160,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4496:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 163,
                            "mutability": "mutable",
                            "name": "result",
                            "nodeType": "VariableDeclaration",
                            "scope": 174,
                            "src": "4510:11:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 162,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4510:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 168,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 165,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 153,
                              "src": "4554:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 166,
                              "name": "interfaceId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 155,
                              "src": "4563:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "id": 164,
                            "name": "_callERC165SupportsInterface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 226,
                            "src": "4525:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$_t_bool_$",
                              "typeString": "function (address,bytes4) view returns (bool,bool)"
                            }
                          },
                          "id": 167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4525:50:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bool_$",
                            "typeString": "tuple(bool,bool)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4495:80:0"
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 171,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 169,
                                "name": "success",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 161,
                                "src": "4594:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "id": 170,
                                "name": "result",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 163,
                                "src": "4605:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "4594:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 172,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4593:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 159,
                        "id": 173,
                        "nodeType": "Return",
                        "src": "4586:26:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 151,
                    "nodeType": "StructuredDocumentation",
                    "src": "3567:652:0",
                    "text": " @notice Query if a contract implements an interface, does not check ERC165 support\n @param account The address of the contract to query for support of an interface\n @param interfaceId The interface identifier, as specified in ERC-165\n @return true if the contract at account indicates support of the interface with\n identifier interfaceId, false otherwise\n @dev Assumes that account contains a contract that supports ERC165, otherwise\n the behavior of this method is undefined. This precondition can be checked\n with {supportsERC165}.\n Interface identification is specified in ERC-165."
                  },
                  "id": 175,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_supportsERC165Interface",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 156,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 153,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 175,
                        "src": "4258:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 152,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4258:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 155,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nodeType": "VariableDeclaration",
                        "scope": 175,
                        "src": "4275:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 154,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "4275:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4257:37:0"
                  },
                  "returnParameters": {
                    "id": 159,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 158,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 175,
                        "src": "4317:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 157,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4317:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4316:6:0"
                  },
                  "scope": 227,
                  "src": "4224:395:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 225,
                    "nodeType": "Block",
                    "src": "5273:307:0",
                    "statements": [
                      {
                        "assignments": [
                          188
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 188,
                            "mutability": "mutable",
                            "name": "encodedParams",
                            "nodeType": "VariableDeclaration",
                            "scope": 225,
                            "src": "5283:26:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 187,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5283:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 194,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 191,
                              "name": "_INTERFACE_ID_ERC165",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8,
                              "src": "5335:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            {
                              "id": 192,
                              "name": "interfaceId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 180,
                              "src": "5357:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "expression": {
                              "id": 189,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "5312:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 190,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodeWithSelector",
                            "nodeType": "MemberAccess",
                            "src": "5312:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes4) pure returns (bytes memory)"
                            }
                          },
                          "id": 193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5312:57:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5283:86:0"
                      },
                      {
                        "assignments": [
                          196,
                          198
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 196,
                            "mutability": "mutable",
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "scope": 225,
                            "src": "5380:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 195,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "5380:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 198,
                            "mutability": "mutable",
                            "name": "result",
                            "nodeType": "VariableDeclaration",
                            "scope": 225,
                            "src": "5394:19:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 197,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "5394:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 205,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 203,
                              "name": "encodedParams",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 188,
                              "src": "5450:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 199,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 178,
                                "src": "5417:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "staticcall",
                              "nodeType": "MemberAccess",
                              "src": "5417:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                              }
                            },
                            "id": 202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "gas"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "hexValue": "3330303030",
                                "id": 201,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5442:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_30000_by_1",
                                  "typeString": "int_const 30000"
                                },
                                "value": "30000"
                              }
                            ],
                            "src": "5417:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gas",
                              "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                            }
                          },
                          "id": 204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5417:47:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5379:85:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 206,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 198,
                              "src": "5478:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "5478:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "hexValue": "3332",
                            "id": 208,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5494:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_32_by_1",
                              "typeString": "int_const 32"
                            },
                            "value": "32"
                          },
                          "src": "5478:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 214,
                        "nodeType": "IfStatement",
                        "src": "5474:45:0",
                        "trueBody": {
                          "expression": {
                            "components": [
                              {
                                "hexValue": "66616c7365",
                                "id": 210,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5506:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              {
                                "hexValue": "66616c7365",
                                "id": 211,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5513:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              }
                            ],
                            "id": 212,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "5505:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_bool_$_t_bool_$",
                              "typeString": "tuple(bool,bool)"
                            }
                          },
                          "functionReturnParameters": 186,
                          "id": 213,
                          "nodeType": "Return",
                          "src": "5498:21:0"
                        }
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 215,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 196,
                              "src": "5537:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 218,
                                  "name": "result",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 198,
                                  "src": "5557:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                {
                                  "components": [
                                    {
                                      "id": 220,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5566:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bool_$",
                                        "typeString": "type(bool)"
                                      },
                                      "typeName": {
                                        "id": 219,
                                        "name": "bool",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5566:4:0",
                                        "typeDescriptions": {}
                                      }
                                    }
                                  ],
                                  "id": 221,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "5565:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bool_$",
                                    "typeString": "type(bool)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  },
                                  {
                                    "typeIdentifier": "t_type$_t_bool_$",
                                    "typeString": "type(bool)"
                                  }
                                ],
                                "expression": {
                                  "id": 216,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "5546:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 217,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "decode",
                                "nodeType": "MemberAccess",
                                "src": "5546:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5546:26:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 223,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "5536:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bool_$",
                            "typeString": "tuple(bool,bool)"
                          }
                        },
                        "functionReturnParameters": 186,
                        "id": 224,
                        "nodeType": "Return",
                        "src": "5529:44:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 176,
                    "nodeType": "StructuredDocumentation",
                    "src": "4625:506:0",
                    "text": " @notice Calls the function with selector 0x01ffc9a7 (ERC165) and suppresses throw\n @param account The address of the contract to query for support of an interface\n @param interfaceId The interface identifier, as specified in ERC-165\n @return success true if the STATICCALL succeeded, false otherwise\n @return result true if the STATICCALL succeeded and the contract at account\n indicates support of the interface with identifier interfaceId, false otherwise"
                  },
                  "id": 226,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_callERC165SupportsInterface",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 181,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 178,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 226,
                        "src": "5174:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 177,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5174:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 180,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nodeType": "VariableDeclaration",
                        "scope": 226,
                        "src": "5191:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 179,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "5191:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5173:37:0"
                  },
                  "returnParameters": {
                    "id": 186,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 183,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 226,
                        "src": "5257:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 182,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5257:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 185,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 226,
                        "src": "5263:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 184,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5263:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5256:12:0"
                  },
                  "scope": 227,
                  "src": "5136:444:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 228,
              "src": "336:5246:0"
            }
          ],
          "src": "33:5550:0"
        }
      },
      "contracts/mocks/ERC165CheckerMock.sol": {
        "id": 1,
        "ast": {
          "absolutePath": "contracts/mocks/ERC165CheckerMock.sol",
          "exportedSymbols": {
            "ERC165Checker": [
              227
            ],
            "ERC165CheckerMock": [
              294
            ]
          },
          "id": 295,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 229,
              "literals": [
                "solidity",
                "^",
                "0.7",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:1"
            },
            {
              "absolutePath": "contracts/introspection/ERC165Checker.sol",
              "file": "../introspection/ERC165Checker.sol",
              "id": 230,
              "nodeType": "ImportDirective",
              "scope": 295,
              "sourceUnit": 228,
              "src": "58:44:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 294,
              "linearizedBaseContracts": [
                294
              ],
              "name": "ERC165CheckerMock",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "id": 233,
                  "libraryName": {
                    "id": 231,
                    "name": "ERC165Checker",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 227,
                    "src": "143:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC165Checker_$227",
                      "typeString": "library ERC165Checker"
                    }
                  },
                  "nodeType": "UsingForDirective",
                  "src": "137:32:1",
                  "typeName": {
                    "id": 232,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "161:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                },
                {
                  "body": {
                    "id": 244,
                    "nodeType": "Block",
                    "src": "243:48:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 240,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 235,
                              "src": "260:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "supportsERC165",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 28,
                            "src": "260:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "260:24:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 239,
                        "id": 243,
                        "nodeType": "Return",
                        "src": "253:31:1"
                      }
                    ]
                  },
                  "functionSelector": "c398a925",
                  "id": 245,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsERC165",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 236,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 235,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 245,
                        "src": "199:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 234,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "199:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "198:17:1"
                  },
                  "returnParameters": {
                    "id": 239,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 238,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 245,
                        "src": "237:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 237,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "237:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "236:6:1"
                  },
                  "scope": 294,
                  "src": "175:116:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 259,
                    "nodeType": "Block",
                    "src": "388:62:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 256,
                              "name": "interfaceId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 249,
                              "src": "431:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            ],
                            "expression": {
                              "id": 254,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 247,
                              "src": "405:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "supportsInterface",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 48,
                            "src": "405:25:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$bound_to$_t_address_$",
                              "typeString": "function (address,bytes4) view returns (bool)"
                            }
                          },
                          "id": 257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "405:38:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 253,
                        "id": 258,
                        "nodeType": "Return",
                        "src": "398:45:1"
                      }
                    ]
                  },
                  "functionSelector": "d9057007",
                  "id": 260,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 250,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 247,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 260,
                        "src": "324:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 246,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "324:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 249,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nodeType": "VariableDeclaration",
                        "scope": 260,
                        "src": "341:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 248,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "341:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "323:37:1"
                  },
                  "returnParameters": {
                    "id": 253,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 252,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 260,
                        "src": "382:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 251,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "382:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "381:6:1"
                  },
                  "scope": 294,
                  "src": "297:153:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 275,
                    "nodeType": "Block",
                    "src": "561:67:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 272,
                              "name": "interfaceIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 265,
                              "src": "608:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                                "typeString": "bytes4[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                                "typeString": "bytes4[] memory"
                              }
                            ],
                            "expression": {
                              "id": 270,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 262,
                              "src": "578:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 271,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "supportsAllInterfaces",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 150,
                            "src": "578:29:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_array$_t_bytes4_$dyn_memory_ptr_$returns$_t_bool_$bound_to$_t_address_$",
                              "typeString": "function (address,bytes4[] memory) view returns (bool)"
                            }
                          },
                          "id": 273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "578:43:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 269,
                        "id": 274,
                        "nodeType": "Return",
                        "src": "571:50:1"
                      }
                    ]
                  },
                  "functionSelector": "4b9dd904",
                  "id": 276,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsAllInterfaces",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 266,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 262,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 276,
                        "src": "487:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 261,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "487:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 265,
                        "mutability": "mutable",
                        "name": "interfaceIds",
                        "nodeType": "VariableDeclaration",
                        "scope": 276,
                        "src": "504:28:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 263,
                            "name": "bytes4",
                            "nodeType": "ElementaryTypeName",
                            "src": "504:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "id": 264,
                          "nodeType": "ArrayTypeName",
                          "src": "504:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                            "typeString": "bytes4[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "486:47:1"
                  },
                  "returnParameters": {
                    "id": 269,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 268,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 276,
                        "src": "555:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 267,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "555:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "554:6:1"
                  },
                  "scope": 294,
                  "src": "456:172:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 292,
                    "nodeType": "Block",
                    "src": "749:68:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 289,
                              "name": "interfaceIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 281,
                              "src": "797:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                                "typeString": "bytes4[] memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                                "typeString": "bytes4[] memory"
                              }
                            ],
                            "expression": {
                              "id": 287,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 278,
                              "src": "766:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 288,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getSupportedInterfaces",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 104,
                            "src": "766:30:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_array$_t_bytes4_$dyn_memory_ptr_$returns$_t_array$_t_bool_$dyn_memory_ptr_$bound_to$_t_address_$",
                              "typeString": "function (address,bytes4[] memory) view returns (bool[] memory)"
                            }
                          },
                          "id": 290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "766:44:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                            "typeString": "bool[] memory"
                          }
                        },
                        "functionReturnParameters": 286,
                        "id": 291,
                        "nodeType": "Return",
                        "src": "759:51:1"
                      }
                    ]
                  },
                  "functionSelector": "77e6b4cc",
                  "id": 293,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getSupportedInterfaces",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 282,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 278,
                        "mutability": "mutable",
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 293,
                        "src": "666:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 277,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "666:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 281,
                        "mutability": "mutable",
                        "name": "interfaceIds",
                        "nodeType": "VariableDeclaration",
                        "scope": 293,
                        "src": "683:28:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 279,
                            "name": "bytes4",
                            "nodeType": "ElementaryTypeName",
                            "src": "683:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "id": 280,
                          "nodeType": "ArrayTypeName",
                          "src": "683:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                            "typeString": "bytes4[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "665:47:1"
                  },
                  "returnParameters": {
                    "id": 286,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 285,
                        "mutability": "mutable",
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 293,
                        "src": "734:13:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
                          "typeString": "bool[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 283,
                            "name": "bool",
                            "nodeType": "ElementaryTypeName",
                            "src": "734:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 284,
                          "nodeType": "ArrayTypeName",
                          "src": "734:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                            "typeString": "bool[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "733:15:1"
                  },
                  "scope": 294,
                  "src": "634:183:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 295,
              "src": "104:715:1"
            }
          ],
          "src": "33:787:1"
        }
      }
    },
    "errors": [],
    "version": "0.7.4",
    "long_version": "0.7.4+commit.3f05b770.Darwin.appleclang",
    "zk_version": "1.3.12"
  }
}
